# Autogenerated from euler.yaml. Do not edit.

self: super:
let
  euler-events-hs-src = super.eulerBuild.allowedPaths {
    root = ./..;
    paths = [
      ../euler-events-hs.cabal
      ../src
      ../test
    ];
  };

  prometheus-haskell-repo = builtins.fetchTarball {
    url = "https://github.com/juspay/prometheus-haskell/archive/54b8fbd57257dbec0b4b76814773c5cebfae2def.tar.gz";
    sha256 = "1l1vg5y7a6nbjqf4syhnjcpq097152q477c0q9l2wjxaaysi769h";
  };
  prometheus-client-path = "${prometheus-haskell-repo}/prometheus-client";
  prometheus-proc-path = "${prometheus-haskell-repo}/prometheus-proc";
  prometheus-metrics-ghc-path = "${prometheus-haskell-repo}/prometheus-metrics-ghc";
  wai-middleware-prometheus-path = "${prometheus-haskell-repo}/wai-middleware-prometheus";

in
super.eulerBuild.mkEulerHaskellOverlay self super
  (hself: hsuper: {
    prometheus-client = self.eulerBuild.fastBuildExternal {
      drv = super.haskell.lib.unmarkBroken (hself.callCabal2nix "prometheus-client" prometheus-client-path { });
    };
    prometheus-proc = self.eulerBuild.fastBuildExternal {
      drv = super.haskell.lib.unmarkBroken (hself.callCabal2nix "prometheus-proc" prometheus-proc-path { });
    };
    prometheus-metrics-ghc = self.eulerBuild.fastBuildExternal {
      drv = super.haskell.lib.unmarkBroken (hself.callCabal2nix "prometheus-metrics-ghc" prometheus-metrics-ghc-path { });
    };
    wai-middleware-prometheus = self.eulerBuild.fastBuildExternal {
      drv = super.haskell.lib.unmarkBroken (hself.callCabal2nix "wai-middleware-prometheus" wai-middleware-prometheus-path { });
    };
    record-dot-preprocessor = self.eulerBuild.fastBuildExternal {
      drv = super.haskell.lib.unmarkBroken (hself.callHackageDirect {
        pkg = "record-dot-preprocessor";
        ver = "0.2.14";
        sha256 = "11zg0wgiy2awsblmazzk5rm22sr11fm3gyj9zsh230339ckrha88";
      } { });
    };
    
    euler-events-hs = self.eulerBuild.fastBuild {
      drv = hself.callCabal2nix "euler-events-hs" euler-events-hs-src { };
      overrides = {
        # We want to run tests for our packages most of the time
        runTests = true;
      };
    };
  })
