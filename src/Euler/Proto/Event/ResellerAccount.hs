{-# LANGUAGE DeriveGeneric     #-}
{-# LANGUAGE DeriveAnyClass    #-}
{-# LANGUAGE DataKinds         #-}
{-# LANGUAGE GADTs             #-}
{-# LANGUAGE TypeApplications  #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Euler.Proto.Event.ResellerAccount where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Control.Applicative as Hs
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty(..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Unsafe.Coerce as Hs
 
data ResellerAccount = ResellerAccount{resellerAccountResellerId ::
                                       Hs.Int64,
                                       resellerAccountUserId :: Hs.Int64,
                                       resellerAccountResellerName :: Hs.Text,
                                       resellerAccountMaybeResellerApiEndpoint ::
                                       Hs.Maybe ResellerAccountMaybeResellerApiEndpoint,
                                       resellerAccountResellerAccountEventType ::
                                       HsProtobuf.Enumerated
                                         Euler.Proto.Event.ResellerAccount.ResellerAccountEventType}
                     deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ResellerAccount where
        nameOf _ = (Hs.fromString "ResellerAccount")
 
instance HsProtobuf.HasDefault ResellerAccount
 
instance HsProtobuf.Message ResellerAccount where
        encodeMessage _
          ResellerAccount{resellerAccountResellerId =
                            resellerAccountResellerId,
                          resellerAccountUserId = resellerAccountUserId,
                          resellerAccountResellerName = resellerAccountResellerName,
                          resellerAccountMaybeResellerApiEndpoint =
                            resellerAccountMaybeResellerApiEndpoint,
                          resellerAccountResellerAccountEventType =
                            resellerAccountResellerAccountEventType}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   resellerAccountResellerId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   resellerAccountUserId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   resellerAccountResellerName),
                case resellerAccountMaybeResellerApiEndpoint of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             ResellerAccountMaybeResellerApiEndpointResellerApiEndpoint y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                                     (HsProtobuf.ForceEmit y)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   resellerAccountResellerAccountEventType)])
        decodeMessage _
          = (Hs.pure ResellerAccount) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 3))
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 5),
                   (Hs.pure
                      (Hs.Just Hs..
                         ResellerAccountMaybeResellerApiEndpointResellerApiEndpoint))
                     <*> HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 4))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.Int64)
                (HsProtobuf.Single "reseller_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.Int64)
                (HsProtobuf.Single "user_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "reseller_name")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "ResellerAccountEventType")))
                (HsProtobuf.Single "reseller_account_event_type")
                []
                "")]
 
instance HsJSONPB.ToJSONPB ResellerAccount where
        toJSONPB (ResellerAccount f1 f2 f3 f5 f4)
          = (HsJSONPB.object
               ["reseller_id" .= f1, "user_id" .= f2, "reseller_name" .= f3,
                (let encodeMaybe_reseller_api_endpoint
                       = (case f5 of
                              Hs.Just
                                (ResellerAccountMaybeResellerApiEndpointResellerApiEndpoint f5)
                                -> (HsJSONPB.pair "reseller_api_endpoint" f5)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_reseller_api_endpoint" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_reseller_api_endpoint]
                             options))
                         options
                       else encodeMaybe_reseller_api_endpoint options),
                "reseller_account_event_type" .= f4])
        toEncodingPB (ResellerAccount f1 f2 f3 f5 f4)
          = (HsJSONPB.pairs
               ["reseller_id" .= f1, "user_id" .= f2, "reseller_name" .= f3,
                (let encodeMaybe_reseller_api_endpoint
                       = (case f5 of
                              Hs.Just
                                (ResellerAccountMaybeResellerApiEndpointResellerApiEndpoint f5)
                                -> (HsJSONPB.pair "reseller_api_endpoint" f5)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_reseller_api_endpoint" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_reseller_api_endpoint] options))
                         options
                       else encodeMaybe_reseller_api_endpoint options),
                "reseller_account_event_type" .= f4])
 
instance HsJSONPB.FromJSONPB ResellerAccount where
        parseJSONPB
          = (HsJSONPB.withObject "ResellerAccount"
               (\ obj ->
                  (Hs.pure ResellerAccount) <*> obj .: "reseller_id" <*>
                    obj .: "user_id"
                    <*> obj .: "reseller_name"
                    <*>
                    (let parseMaybe_reseller_api_endpoint parseObj
                           = Hs.msum
                               [Hs.Just Hs..
                                  ResellerAccountMaybeResellerApiEndpointResellerApiEndpoint
                                  <$> (HsJSONPB.parseField parseObj "reseller_api_endpoint"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_reseller_api_endpoint") Hs.>>=
                          (HsJSONPB.withObject "maybe_reseller_api_endpoint"
                             parseMaybe_reseller_api_endpoint))
                         <|> (parseMaybe_reseller_api_endpoint obj))
                    <*> obj .: "reseller_account_event_type"))
 
instance HsJSONPB.ToJSON ResellerAccount where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON ResellerAccount where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema ResellerAccount where
        declareNamedSchema _
          = do let declare_reseller_id = HsJSONPB.declareSchemaRef
               resellerAccountResellerId <- declare_reseller_id Proxy.Proxy
               let declare_user_id = HsJSONPB.declareSchemaRef
               resellerAccountUserId <- declare_user_id Proxy.Proxy
               let declare_reseller_name = HsJSONPB.declareSchemaRef
               resellerAccountResellerName <- declare_reseller_name Proxy.Proxy
               let declare_maybe_reseller_api_endpoint = HsJSONPB.declareSchemaRef
               resellerAccountMaybeResellerApiEndpoint <- declare_maybe_reseller_api_endpoint
                                                            Proxy.Proxy
               let declare_reseller_account_event_type = HsJSONPB.declareSchemaRef
               resellerAccountResellerAccountEventType <- declare_reseller_account_event_type
                                                            Proxy.Proxy
               let _ = Hs.pure ResellerAccount <*>
                         HsJSONPB.asProxy declare_reseller_id
                         <*> HsJSONPB.asProxy declare_user_id
                         <*> HsJSONPB.asProxy declare_reseller_name
                         <*> HsJSONPB.asProxy declare_maybe_reseller_api_endpoint
                         <*> HsJSONPB.asProxy declare_reseller_account_event_type
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ResellerAccount",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("reseller_id", resellerAccountResellerId),
                                                        ("user_id", resellerAccountUserId),
                                                        ("reseller_name",
                                                         resellerAccountResellerName),
                                                        ("maybe_reseller_api_endpoint",
                                                         resellerAccountMaybeResellerApiEndpoint),
                                                        ("reseller_account_event_type",
                                                         resellerAccountResellerAccountEventType)]}})
 
data ResellerAccountMaybeResellerApiEndpoint = ResellerAccountMaybeResellerApiEndpointResellerApiEndpoint Hs.Text
                                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic,
                                                       Hs.NFData)
 
instance HsProtobuf.Named ResellerAccountMaybeResellerApiEndpoint
         where
        nameOf _
          = (Hs.fromString "ResellerAccountMaybeResellerApiEndpoint")
 
instance HsJSONPB.ToSchema ResellerAccountMaybeResellerApiEndpoint
         where
        declareNamedSchema _
          = do let declare_reseller_api_endpoint = HsJSONPB.declareSchemaRef
               resellerAccountMaybeResellerApiEndpointResellerApiEndpoint <- declare_reseller_api_endpoint
                                                                               Proxy.Proxy
               let _ = Hs.pure
                         ResellerAccountMaybeResellerApiEndpointResellerApiEndpoint
                         <*> HsJSONPB.asProxy declare_reseller_api_endpoint
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ResellerAccountMaybeResellerApiEndpoint",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("reseller_api_endpoint",
                                                         resellerAccountMaybeResellerApiEndpointResellerApiEndpoint)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data ResellerAccountEventType = ResellerAccountEventTypeNO_RESELLER_ACCOUNT_EVENT_TYPE
                              | ResellerAccountEventTypeRESELLER_ACCOUNT_EVENT_CREATE
                              | ResellerAccountEventTypeRESELLER_ACCOUNT_EVENT_UPDATE
                              deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ResellerAccountEventType where
        nameOf _ = (Hs.fromString "ResellerAccountEventType")
 
instance HsProtobuf.HasDefault ResellerAccountEventType
 
instance Hs.Bounded ResellerAccountEventType where
        minBound = ResellerAccountEventTypeNO_RESELLER_ACCOUNT_EVENT_TYPE
        maxBound = ResellerAccountEventTypeRESELLER_ACCOUNT_EVENT_UPDATE
 
instance Hs.Ord ResellerAccountEventType where
        compare x y
          = Hs.compare (HsProtobuf.fromProtoEnum x)
              (HsProtobuf.fromProtoEnum y)
 
instance HsProtobuf.ProtoEnum ResellerAccountEventType where
        toProtoEnumMay 0
          = Hs.Just ResellerAccountEventTypeNO_RESELLER_ACCOUNT_EVENT_TYPE
        toProtoEnumMay 1
          = Hs.Just ResellerAccountEventTypeRESELLER_ACCOUNT_EVENT_CREATE
        toProtoEnumMay 2
          = Hs.Just ResellerAccountEventTypeRESELLER_ACCOUNT_EVENT_UPDATE
        toProtoEnumMay _ = Hs.Nothing
        fromProtoEnum
          (ResellerAccountEventTypeNO_RESELLER_ACCOUNT_EVENT_TYPE) = 0
        fromProtoEnum
          (ResellerAccountEventTypeRESELLER_ACCOUNT_EVENT_CREATE) = 1
        fromProtoEnum
          (ResellerAccountEventTypeRESELLER_ACCOUNT_EVENT_UPDATE) = 2
 
instance HsJSONPB.ToJSONPB ResellerAccountEventType where
        toJSONPB x _ = HsJSONPB.enumFieldString x
        toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
 
instance HsJSONPB.FromJSONPB ResellerAccountEventType where
        parseJSONPB (HsJSONPB.String "NO_RESELLER_ACCOUNT_EVENT_TYPE")
          = Hs.pure ResellerAccountEventTypeNO_RESELLER_ACCOUNT_EVENT_TYPE
        parseJSONPB (HsJSONPB.String "RESELLER_ACCOUNT_EVENT_CREATE")
          = Hs.pure ResellerAccountEventTypeRESELLER_ACCOUNT_EVENT_CREATE
        parseJSONPB (HsJSONPB.String "RESELLER_ACCOUNT_EVENT_UPDATE")
          = Hs.pure ResellerAccountEventTypeRESELLER_ACCOUNT_EVENT_UPDATE
        parseJSONPB v
          = (HsJSONPB.typeMismatch "ResellerAccountEventType" v)
 
instance HsJSONPB.ToJSON ResellerAccountEventType where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON ResellerAccountEventType where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsProtobuf.Finite ResellerAccountEventType