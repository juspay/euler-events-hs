{-# LANGUAGE DeriveGeneric     #-}
{-# LANGUAGE DeriveAnyClass    #-}
{-# LANGUAGE DataKinds         #-}
{-# LANGUAGE GADTs             #-}
{-# LANGUAGE TypeApplications  #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Euler.Proto.Event.Refund where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Control.Applicative as Hs
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty(..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Unsafe.Coerce as Hs
 
data Refund = Refund{refundId :: Hs.Int64,
                     refundAmount :: Hs.Double, refundDateCreated :: Hs.Int64,
                     refundGateway :: Hs.Text, refundProcessed :: Hs.Bool,
                     refundStatus ::
                     HsProtobuf.Enumerated Euler.Proto.Event.Refund.RefundStatus,
                     refundMaybeAuthorizationId :: Hs.Maybe RefundMaybeAuthorizationId,
                     refundMaybeEpgTxnId :: Hs.Maybe RefundMaybeEpgTxnId,
                     refundMaybeRootReferenceNumber ::
                     Hs.Maybe RefundMaybeRootReferenceNumber,
                     refundMaybeTxnDetailId :: Hs.Maybe RefundMaybeTxnDetailId,
                     refundMaybeReferenceId :: Hs.Maybe RefundMaybeReferenceId,
                     refundMaybeUniqueRequestId :: Hs.Maybe RefundMaybeUniqueRequestId,
                     refundMaybeErrorMessage :: Hs.Maybe RefundMaybeErrorMessage,
                     refundMaybeSentToGateway :: Hs.Maybe RefundMaybeSentToGateway,
                     refundMaybeResponseCode :: Hs.Maybe RefundMaybeResponseCode,
                     refundMaybeInternalReferenceId ::
                     Hs.Maybe RefundMaybeInternalReferenceId,
                     refundMaybeRefundArn :: Hs.Maybe RefundMaybeRefundArn,
                     refundMaybeInitiatedBy :: Hs.Maybe RefundMaybeInitiatedBy,
                     refundMaybeRefundType :: Hs.Maybe RefundMaybeRefundType,
                     refundMaybeRefundSource :: Hs.Maybe RefundMaybeRefundSource,
                     refundMaybeLastModified :: Hs.Maybe RefundMaybeLastModified,
                     refundRefundEventType ::
                     HsProtobuf.Enumerated Euler.Proto.Event.Refund.RefundEventType}
            deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named Refund where
        nameOf _ = (Hs.fromString "Refund")
 
instance HsProtobuf.HasDefault Refund
 
instance HsProtobuf.Message Refund where
        encodeMessage _
          Refund{refundId = refundId, refundAmount = refundAmount,
                 refundDateCreated = refundDateCreated,
                 refundGateway = refundGateway, refundProcessed = refundProcessed,
                 refundStatus = refundStatus,
                 refundMaybeAuthorizationId = refundMaybeAuthorizationId,
                 refundMaybeEpgTxnId = refundMaybeEpgTxnId,
                 refundMaybeRootReferenceNumber = refundMaybeRootReferenceNumber,
                 refundMaybeTxnDetailId = refundMaybeTxnDetailId,
                 refundMaybeReferenceId = refundMaybeReferenceId,
                 refundMaybeUniqueRequestId = refundMaybeUniqueRequestId,
                 refundMaybeErrorMessage = refundMaybeErrorMessage,
                 refundMaybeSentToGateway = refundMaybeSentToGateway,
                 refundMaybeResponseCode = refundMaybeResponseCode,
                 refundMaybeInternalReferenceId = refundMaybeInternalReferenceId,
                 refundMaybeRefundArn = refundMaybeRefundArn,
                 refundMaybeInitiatedBy = refundMaybeInitiatedBy,
                 refundMaybeRefundType = refundMaybeRefundType,
                 refundMaybeRefundSource = refundMaybeRefundSource,
                 refundMaybeLastModified = refundMaybeLastModified,
                 refundRefundEventType = refundRefundEventType}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   refundId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   refundAmount),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   refundDateCreated),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   refundGateway),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   refundProcessed),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                   refundStatus),
                case refundMaybeAuthorizationId of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             RefundMaybeAuthorizationIdAuthorizationId y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 8)
                                     (HsProtobuf.ForceEmit y)),
                case refundMaybeEpgTxnId of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             RefundMaybeEpgTxnIdEpgTxnId y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 9)
                                     (HsProtobuf.ForceEmit y)),
                case refundMaybeRootReferenceNumber of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             RefundMaybeRootReferenceNumberRootReferenceNumber y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 10)
                                     (HsProtobuf.ForceEmit y)),
                case refundMaybeTxnDetailId of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             RefundMaybeTxnDetailIdTxnDetailId y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 11)
                                     (HsProtobuf.ForceEmit y)),
                case refundMaybeReferenceId of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             RefundMaybeReferenceIdReferenceId y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 12)
                                     (HsProtobuf.ForceEmit y)),
                case refundMaybeUniqueRequestId of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             RefundMaybeUniqueRequestIdUniqueRequestId y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 13)
                                     (HsProtobuf.ForceEmit y)),
                case refundMaybeErrorMessage of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             RefundMaybeErrorMessageErrorMessage y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 14)
                                     (HsProtobuf.ForceEmit y)),
                case refundMaybeSentToGateway of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             RefundMaybeSentToGatewaySentToGateway y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 15)
                                     (HsProtobuf.ForceEmit y)),
                case refundMaybeResponseCode of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             RefundMaybeResponseCodeResponseCode y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 16)
                                     (HsProtobuf.ForceEmit y)),
                case refundMaybeInternalReferenceId of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             RefundMaybeInternalReferenceIdInternalReferenceId y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 17)
                                     (HsProtobuf.ForceEmit y)),
                case refundMaybeRefundArn of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             RefundMaybeRefundArnRefundArn y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 18)
                                     (HsProtobuf.ForceEmit y)),
                case refundMaybeInitiatedBy of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             RefundMaybeInitiatedByInitiatedBy y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 19)
                                     (HsProtobuf.ForceEmit y)),
                case refundMaybeRefundType of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             RefundMaybeRefundTypeRefundType y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 20)
                                     (HsProtobuf.ForceEmit y)),
                case refundMaybeRefundSource of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             RefundMaybeRefundSourceRefundSource y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 21)
                                     (HsProtobuf.ForceEmit y)),
                case refundMaybeLastModified of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             RefundMaybeLastModifiedLastModified y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 22)
                                     (HsProtobuf.ForceEmit y)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 7)
                   refundRefundEventType)])
        decodeMessage _
          = (Hs.pure Refund) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 3))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 4))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 5))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 6))
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 8),
                   (Hs.pure (Hs.Just Hs.. RefundMaybeAuthorizationIdAuthorizationId))
                     <*> HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 9),
                   (Hs.pure (Hs.Just Hs.. RefundMaybeEpgTxnIdEpgTxnId)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 10),
                   (Hs.pure
                      (Hs.Just Hs.. RefundMaybeRootReferenceNumberRootReferenceNumber))
                     <*> HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 11),
                   (Hs.pure (Hs.Just Hs.. RefundMaybeTxnDetailIdTxnDetailId)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 12),
                   (Hs.pure (Hs.Just Hs.. RefundMaybeReferenceIdReferenceId)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 13),
                   (Hs.pure (Hs.Just Hs.. RefundMaybeUniqueRequestIdUniqueRequestId))
                     <*> HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 14),
                   (Hs.pure (Hs.Just Hs.. RefundMaybeErrorMessageErrorMessage)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 15),
                   (Hs.pure (Hs.Just Hs.. RefundMaybeSentToGatewaySentToGateway)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 16),
                   (Hs.pure (Hs.Just Hs.. RefundMaybeResponseCodeResponseCode)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 17),
                   (Hs.pure
                      (Hs.Just Hs.. RefundMaybeInternalReferenceIdInternalReferenceId))
                     <*> HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 18),
                   (Hs.pure (Hs.Just Hs.. RefundMaybeRefundArnRefundArn)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 19),
                   (Hs.pure (Hs.Just Hs.. RefundMaybeInitiatedByInitiatedBy)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 20),
                   (Hs.pure (Hs.Just Hs.. RefundMaybeRefundTypeRefundType)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 21),
                   (Hs.pure (Hs.Just Hs.. RefundMaybeRefundSourceRefundSource)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 22),
                   (Hs.pure (Hs.Just Hs.. RefundMaybeLastModifiedLastModified)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 7))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.Int64)
                (HsProtobuf.Single "id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.Double)
                (HsProtobuf.Single "amount")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim HsProtobuf.Int64)
                (HsProtobuf.Single "date_created")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "gateway")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobuf.Prim HsProtobuf.Bool)
                (HsProtobuf.Single "processed")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 6)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "RefundStatus")))
                (HsProtobuf.Single "status")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 7)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "RefundEventType")))
                (HsProtobuf.Single "refund_event_type")
                []
                "")]
 
instance HsJSONPB.ToJSONPB Refund where
        toJSONPB
          (Refund f1 f2 f3 f4 f5 f6 f8 f9 f10 f11 f12 f13 f14 f15 f16 f17 f18
             f19 f20 f21 f22 f7)
          = (HsJSONPB.object
               ["id" .= f1, "amount" .= f2, "date_created" .= f3, "gateway" .= f4,
                "processed" .= f5, "status" .= f6,
                (let encodeMaybe_authorization_id
                       = (case f8 of
                              Hs.Just (RefundMaybeAuthorizationIdAuthorizationId f8)
                                -> (HsJSONPB.pair "authorization_id" f8)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_authorization_id" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_authorization_id] options))
                         options
                       else encodeMaybe_authorization_id options),
                (let encodeMaybe_epg_txn_id
                       = (case f9 of
                              Hs.Just (RefundMaybeEpgTxnIdEpgTxnId f9)
                                -> (HsJSONPB.pair "epg_txn_id" f9)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_epg_txn_id" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_epg_txn_id] options))
                         options
                       else encodeMaybe_epg_txn_id options),
                (let encodeMaybe_root_reference_number
                       = (case f10 of
                              Hs.Just (RefundMaybeRootReferenceNumberRootReferenceNumber f10)
                                -> (HsJSONPB.pair "root_reference_number" f10)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_root_reference_number" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_root_reference_number]
                             options))
                         options
                       else encodeMaybe_root_reference_number options),
                (let encodeMaybe_txn_detail_id
                       = (case f11 of
                              Hs.Just (RefundMaybeTxnDetailIdTxnDetailId f11)
                                -> (HsJSONPB.pair "txn_detail_id" f11)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_txn_detail_id" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_txn_detail_id] options))
                         options
                       else encodeMaybe_txn_detail_id options),
                (let encodeMaybe_reference_id
                       = (case f12 of
                              Hs.Just (RefundMaybeReferenceIdReferenceId f12)
                                -> (HsJSONPB.pair "reference_id" f12)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_reference_id" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_reference_id] options))
                         options
                       else encodeMaybe_reference_id options),
                (let encodeMaybe_unique_request_id
                       = (case f13 of
                              Hs.Just (RefundMaybeUniqueRequestIdUniqueRequestId f13)
                                -> (HsJSONPB.pair "unique_request_id" f13)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_unique_request_id" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_unique_request_id] options))
                         options
                       else encodeMaybe_unique_request_id options),
                (let encodeMaybe_error_message
                       = (case f14 of
                              Hs.Just (RefundMaybeErrorMessageErrorMessage f14)
                                -> (HsJSONPB.pair "error_message" f14)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_error_message" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_error_message] options))
                         options
                       else encodeMaybe_error_message options),
                (let encodeMaybe_sent_to_gateway
                       = (case f15 of
                              Hs.Just (RefundMaybeSentToGatewaySentToGateway f15)
                                -> (HsJSONPB.pair "sent_to_gateway" f15)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_sent_to_gateway" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_sent_to_gateway] options))
                         options
                       else encodeMaybe_sent_to_gateway options),
                (let encodeMaybe_response_code
                       = (case f16 of
                              Hs.Just (RefundMaybeResponseCodeResponseCode f16)
                                -> (HsJSONPB.pair "response_code" f16)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_response_code" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_response_code] options))
                         options
                       else encodeMaybe_response_code options),
                (let encodeMaybe_internal_reference_id
                       = (case f17 of
                              Hs.Just (RefundMaybeInternalReferenceIdInternalReferenceId f17)
                                -> (HsJSONPB.pair "internal_reference_id" f17)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_internal_reference_id" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_internal_reference_id]
                             options))
                         options
                       else encodeMaybe_internal_reference_id options),
                (let encodeMaybe_refund_arn
                       = (case f18 of
                              Hs.Just (RefundMaybeRefundArnRefundArn f18)
                                -> (HsJSONPB.pair "refund_arn" f18)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_refund_arn" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_refund_arn] options))
                         options
                       else encodeMaybe_refund_arn options),
                (let encodeMaybe_initiated_by
                       = (case f19 of
                              Hs.Just (RefundMaybeInitiatedByInitiatedBy f19)
                                -> (HsJSONPB.pair "initiated_by" f19)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_initiated_by" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_initiated_by] options))
                         options
                       else encodeMaybe_initiated_by options),
                (let encodeMaybe_refund_type
                       = (case f20 of
                              Hs.Just (RefundMaybeRefundTypeRefundType f20)
                                -> (HsJSONPB.pair "refund_type" f20)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_refund_type" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_refund_type] options))
                         options
                       else encodeMaybe_refund_type options),
                (let encodeMaybe_refund_source
                       = (case f21 of
                              Hs.Just (RefundMaybeRefundSourceRefundSource f21)
                                -> (HsJSONPB.pair "refund_source" f21)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_refund_source" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_refund_source] options))
                         options
                       else encodeMaybe_refund_source options),
                (let encodeMaybe_last_modified
                       = (case f22 of
                              Hs.Just (RefundMaybeLastModifiedLastModified f22)
                                -> (HsJSONPB.pair "last_modified" f22)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_last_modified" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_last_modified] options))
                         options
                       else encodeMaybe_last_modified options),
                "refund_event_type" .= f7])
        toEncodingPB
          (Refund f1 f2 f3 f4 f5 f6 f8 f9 f10 f11 f12 f13 f14 f15 f16 f17 f18
             f19 f20 f21 f22 f7)
          = (HsJSONPB.pairs
               ["id" .= f1, "amount" .= f2, "date_created" .= f3, "gateway" .= f4,
                "processed" .= f5, "status" .= f6,
                (let encodeMaybe_authorization_id
                       = (case f8 of
                              Hs.Just (RefundMaybeAuthorizationIdAuthorizationId f8)
                                -> (HsJSONPB.pair "authorization_id" f8)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_authorization_id" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_authorization_id] options))
                         options
                       else encodeMaybe_authorization_id options),
                (let encodeMaybe_epg_txn_id
                       = (case f9 of
                              Hs.Just (RefundMaybeEpgTxnIdEpgTxnId f9)
                                -> (HsJSONPB.pair "epg_txn_id" f9)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_epg_txn_id" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_epg_txn_id] options))
                         options
                       else encodeMaybe_epg_txn_id options),
                (let encodeMaybe_root_reference_number
                       = (case f10 of
                              Hs.Just (RefundMaybeRootReferenceNumberRootReferenceNumber f10)
                                -> (HsJSONPB.pair "root_reference_number" f10)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_root_reference_number" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_root_reference_number] options))
                         options
                       else encodeMaybe_root_reference_number options),
                (let encodeMaybe_txn_detail_id
                       = (case f11 of
                              Hs.Just (RefundMaybeTxnDetailIdTxnDetailId f11)
                                -> (HsJSONPB.pair "txn_detail_id" f11)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_txn_detail_id" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_txn_detail_id] options))
                         options
                       else encodeMaybe_txn_detail_id options),
                (let encodeMaybe_reference_id
                       = (case f12 of
                              Hs.Just (RefundMaybeReferenceIdReferenceId f12)
                                -> (HsJSONPB.pair "reference_id" f12)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_reference_id" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_reference_id] options))
                         options
                       else encodeMaybe_reference_id options),
                (let encodeMaybe_unique_request_id
                       = (case f13 of
                              Hs.Just (RefundMaybeUniqueRequestIdUniqueRequestId f13)
                                -> (HsJSONPB.pair "unique_request_id" f13)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_unique_request_id" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_unique_request_id] options))
                         options
                       else encodeMaybe_unique_request_id options),
                (let encodeMaybe_error_message
                       = (case f14 of
                              Hs.Just (RefundMaybeErrorMessageErrorMessage f14)
                                -> (HsJSONPB.pair "error_message" f14)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_error_message" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_error_message] options))
                         options
                       else encodeMaybe_error_message options),
                (let encodeMaybe_sent_to_gateway
                       = (case f15 of
                              Hs.Just (RefundMaybeSentToGatewaySentToGateway f15)
                                -> (HsJSONPB.pair "sent_to_gateway" f15)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_sent_to_gateway" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_sent_to_gateway] options))
                         options
                       else encodeMaybe_sent_to_gateway options),
                (let encodeMaybe_response_code
                       = (case f16 of
                              Hs.Just (RefundMaybeResponseCodeResponseCode f16)
                                -> (HsJSONPB.pair "response_code" f16)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_response_code" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_response_code] options))
                         options
                       else encodeMaybe_response_code options),
                (let encodeMaybe_internal_reference_id
                       = (case f17 of
                              Hs.Just (RefundMaybeInternalReferenceIdInternalReferenceId f17)
                                -> (HsJSONPB.pair "internal_reference_id" f17)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_internal_reference_id" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_internal_reference_id] options))
                         options
                       else encodeMaybe_internal_reference_id options),
                (let encodeMaybe_refund_arn
                       = (case f18 of
                              Hs.Just (RefundMaybeRefundArnRefundArn f18)
                                -> (HsJSONPB.pair "refund_arn" f18)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_refund_arn" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_refund_arn] options))
                         options
                       else encodeMaybe_refund_arn options),
                (let encodeMaybe_initiated_by
                       = (case f19 of
                              Hs.Just (RefundMaybeInitiatedByInitiatedBy f19)
                                -> (HsJSONPB.pair "initiated_by" f19)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_initiated_by" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_initiated_by] options))
                         options
                       else encodeMaybe_initiated_by options),
                (let encodeMaybe_refund_type
                       = (case f20 of
                              Hs.Just (RefundMaybeRefundTypeRefundType f20)
                                -> (HsJSONPB.pair "refund_type" f20)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_refund_type" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_refund_type] options))
                         options
                       else encodeMaybe_refund_type options),
                (let encodeMaybe_refund_source
                       = (case f21 of
                              Hs.Just (RefundMaybeRefundSourceRefundSource f21)
                                -> (HsJSONPB.pair "refund_source" f21)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_refund_source" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_refund_source] options))
                         options
                       else encodeMaybe_refund_source options),
                (let encodeMaybe_last_modified
                       = (case f22 of
                              Hs.Just (RefundMaybeLastModifiedLastModified f22)
                                -> (HsJSONPB.pair "last_modified" f22)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_last_modified" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_last_modified] options))
                         options
                       else encodeMaybe_last_modified options),
                "refund_event_type" .= f7])
 
instance HsJSONPB.FromJSONPB Refund where
        parseJSONPB
          = (HsJSONPB.withObject "Refund"
               (\ obj ->
                  (Hs.pure Refund) <*> obj .: "id" <*> obj .: "amount" <*>
                    obj .: "date_created"
                    <*> obj .: "gateway"
                    <*> obj .: "processed"
                    <*> obj .: "status"
                    <*>
                    (let parseMaybe_authorization_id parseObj
                           = Hs.msum
                               [Hs.Just Hs.. RefundMaybeAuthorizationIdAuthorizationId <$>
                                  (HsJSONPB.parseField parseObj "authorization_id"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_authorization_id") Hs.>>=
                          (HsJSONPB.withObject "maybe_authorization_id"
                             parseMaybe_authorization_id))
                         <|> (parseMaybe_authorization_id obj))
                    <*>
                    (let parseMaybe_epg_txn_id parseObj
                           = Hs.msum
                               [Hs.Just Hs.. RefundMaybeEpgTxnIdEpgTxnId <$>
                                  (HsJSONPB.parseField parseObj "epg_txn_id"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_epg_txn_id") Hs.>>=
                          (HsJSONPB.withObject "maybe_epg_txn_id" parseMaybe_epg_txn_id))
                         <|> (parseMaybe_epg_txn_id obj))
                    <*>
                    (let parseMaybe_root_reference_number parseObj
                           = Hs.msum
                               [Hs.Just Hs.. RefundMaybeRootReferenceNumberRootReferenceNumber <$>
                                  (HsJSONPB.parseField parseObj "root_reference_number"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_root_reference_number") Hs.>>=
                          (HsJSONPB.withObject "maybe_root_reference_number"
                             parseMaybe_root_reference_number))
                         <|> (parseMaybe_root_reference_number obj))
                    <*>
                    (let parseMaybe_txn_detail_id parseObj
                           = Hs.msum
                               [Hs.Just Hs.. RefundMaybeTxnDetailIdTxnDetailId <$>
                                  (HsJSONPB.parseField parseObj "txn_detail_id"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_txn_detail_id") Hs.>>=
                          (HsJSONPB.withObject "maybe_txn_detail_id"
                             parseMaybe_txn_detail_id))
                         <|> (parseMaybe_txn_detail_id obj))
                    <*>
                    (let parseMaybe_reference_id parseObj
                           = Hs.msum
                               [Hs.Just Hs.. RefundMaybeReferenceIdReferenceId <$>
                                  (HsJSONPB.parseField parseObj "reference_id"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_reference_id") Hs.>>=
                          (HsJSONPB.withObject "maybe_reference_id" parseMaybe_reference_id))
                         <|> (parseMaybe_reference_id obj))
                    <*>
                    (let parseMaybe_unique_request_id parseObj
                           = Hs.msum
                               [Hs.Just Hs.. RefundMaybeUniqueRequestIdUniqueRequestId <$>
                                  (HsJSONPB.parseField parseObj "unique_request_id"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_unique_request_id") Hs.>>=
                          (HsJSONPB.withObject "maybe_unique_request_id"
                             parseMaybe_unique_request_id))
                         <|> (parseMaybe_unique_request_id obj))
                    <*>
                    (let parseMaybe_error_message parseObj
                           = Hs.msum
                               [Hs.Just Hs.. RefundMaybeErrorMessageErrorMessage <$>
                                  (HsJSONPB.parseField parseObj "error_message"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_error_message") Hs.>>=
                          (HsJSONPB.withObject "maybe_error_message"
                             parseMaybe_error_message))
                         <|> (parseMaybe_error_message obj))
                    <*>
                    (let parseMaybe_sent_to_gateway parseObj
                           = Hs.msum
                               [Hs.Just Hs.. RefundMaybeSentToGatewaySentToGateway <$>
                                  (HsJSONPB.parseField parseObj "sent_to_gateway"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_sent_to_gateway") Hs.>>=
                          (HsJSONPB.withObject "maybe_sent_to_gateway"
                             parseMaybe_sent_to_gateway))
                         <|> (parseMaybe_sent_to_gateway obj))
                    <*>
                    (let parseMaybe_response_code parseObj
                           = Hs.msum
                               [Hs.Just Hs.. RefundMaybeResponseCodeResponseCode <$>
                                  (HsJSONPB.parseField parseObj "response_code"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_response_code") Hs.>>=
                          (HsJSONPB.withObject "maybe_response_code"
                             parseMaybe_response_code))
                         <|> (parseMaybe_response_code obj))
                    <*>
                    (let parseMaybe_internal_reference_id parseObj
                           = Hs.msum
                               [Hs.Just Hs.. RefundMaybeInternalReferenceIdInternalReferenceId <$>
                                  (HsJSONPB.parseField parseObj "internal_reference_id"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_internal_reference_id") Hs.>>=
                          (HsJSONPB.withObject "maybe_internal_reference_id"
                             parseMaybe_internal_reference_id))
                         <|> (parseMaybe_internal_reference_id obj))
                    <*>
                    (let parseMaybe_refund_arn parseObj
                           = Hs.msum
                               [Hs.Just Hs.. RefundMaybeRefundArnRefundArn <$>
                                  (HsJSONPB.parseField parseObj "refund_arn"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_refund_arn") Hs.>>=
                          (HsJSONPB.withObject "maybe_refund_arn" parseMaybe_refund_arn))
                         <|> (parseMaybe_refund_arn obj))
                    <*>
                    (let parseMaybe_initiated_by parseObj
                           = Hs.msum
                               [Hs.Just Hs.. RefundMaybeInitiatedByInitiatedBy <$>
                                  (HsJSONPB.parseField parseObj "initiated_by"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_initiated_by") Hs.>>=
                          (HsJSONPB.withObject "maybe_initiated_by" parseMaybe_initiated_by))
                         <|> (parseMaybe_initiated_by obj))
                    <*>
                    (let parseMaybe_refund_type parseObj
                           = Hs.msum
                               [Hs.Just Hs.. RefundMaybeRefundTypeRefundType <$>
                                  (HsJSONPB.parseField parseObj "refund_type"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_refund_type") Hs.>>=
                          (HsJSONPB.withObject "maybe_refund_type" parseMaybe_refund_type))
                         <|> (parseMaybe_refund_type obj))
                    <*>
                    (let parseMaybe_refund_source parseObj
                           = Hs.msum
                               [Hs.Just Hs.. RefundMaybeRefundSourceRefundSource <$>
                                  (HsJSONPB.parseField parseObj "refund_source"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_refund_source") Hs.>>=
                          (HsJSONPB.withObject "maybe_refund_source"
                             parseMaybe_refund_source))
                         <|> (parseMaybe_refund_source obj))
                    <*>
                    (let parseMaybe_last_modified parseObj
                           = Hs.msum
                               [Hs.Just Hs.. RefundMaybeLastModifiedLastModified <$>
                                  (HsJSONPB.parseField parseObj "last_modified"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_last_modified") Hs.>>=
                          (HsJSONPB.withObject "maybe_last_modified"
                             parseMaybe_last_modified))
                         <|> (parseMaybe_last_modified obj))
                    <*> obj .: "refund_event_type"))
 
instance HsJSONPB.ToJSON Refund where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON Refund where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema Refund where
        declareNamedSchema _
          = do let declare_id = HsJSONPB.declareSchemaRef
               refundId <- declare_id Proxy.Proxy
               let declare_amount = HsJSONPB.declareSchemaRef
               refundAmount <- declare_amount Proxy.Proxy
               let declare_date_created = HsJSONPB.declareSchemaRef
               refundDateCreated <- declare_date_created Proxy.Proxy
               let declare_gateway = HsJSONPB.declareSchemaRef
               refundGateway <- declare_gateway Proxy.Proxy
               let declare_processed = HsJSONPB.declareSchemaRef
               refundProcessed <- declare_processed Proxy.Proxy
               let declare_status = HsJSONPB.declareSchemaRef
               refundStatus <- declare_status Proxy.Proxy
               let declare_maybe_authorization_id = HsJSONPB.declareSchemaRef
               refundMaybeAuthorizationId <- declare_maybe_authorization_id
                                               Proxy.Proxy
               let declare_maybe_epg_txn_id = HsJSONPB.declareSchemaRef
               refundMaybeEpgTxnId <- declare_maybe_epg_txn_id Proxy.Proxy
               let declare_maybe_root_reference_number = HsJSONPB.declareSchemaRef
               refundMaybeRootReferenceNumber <- declare_maybe_root_reference_number
                                                   Proxy.Proxy
               let declare_maybe_txn_detail_id = HsJSONPB.declareSchemaRef
               refundMaybeTxnDetailId <- declare_maybe_txn_detail_id Proxy.Proxy
               let declare_maybe_reference_id = HsJSONPB.declareSchemaRef
               refundMaybeReferenceId <- declare_maybe_reference_id Proxy.Proxy
               let declare_maybe_unique_request_id = HsJSONPB.declareSchemaRef
               refundMaybeUniqueRequestId <- declare_maybe_unique_request_id
                                               Proxy.Proxy
               let declare_maybe_error_message = HsJSONPB.declareSchemaRef
               refundMaybeErrorMessage <- declare_maybe_error_message Proxy.Proxy
               let declare_maybe_sent_to_gateway = HsJSONPB.declareSchemaRef
               refundMaybeSentToGateway <- declare_maybe_sent_to_gateway
                                             Proxy.Proxy
               let declare_maybe_response_code = HsJSONPB.declareSchemaRef
               refundMaybeResponseCode <- declare_maybe_response_code Proxy.Proxy
               let declare_maybe_internal_reference_id = HsJSONPB.declareSchemaRef
               refundMaybeInternalReferenceId <- declare_maybe_internal_reference_id
                                                   Proxy.Proxy
               let declare_maybe_refund_arn = HsJSONPB.declareSchemaRef
               refundMaybeRefundArn <- declare_maybe_refund_arn Proxy.Proxy
               let declare_maybe_initiated_by = HsJSONPB.declareSchemaRef
               refundMaybeInitiatedBy <- declare_maybe_initiated_by Proxy.Proxy
               let declare_maybe_refund_type = HsJSONPB.declareSchemaRef
               refundMaybeRefundType <- declare_maybe_refund_type Proxy.Proxy
               let declare_maybe_refund_source = HsJSONPB.declareSchemaRef
               refundMaybeRefundSource <- declare_maybe_refund_source Proxy.Proxy
               let declare_maybe_last_modified = HsJSONPB.declareSchemaRef
               refundMaybeLastModified <- declare_maybe_last_modified Proxy.Proxy
               let declare_refund_event_type = HsJSONPB.declareSchemaRef
               refundRefundEventType <- declare_refund_event_type Proxy.Proxy
               let _ = Hs.pure Refund <*> HsJSONPB.asProxy declare_id <*>
                         HsJSONPB.asProxy declare_amount
                         <*> HsJSONPB.asProxy declare_date_created
                         <*> HsJSONPB.asProxy declare_gateway
                         <*> HsJSONPB.asProxy declare_processed
                         <*> HsJSONPB.asProxy declare_status
                         <*> HsJSONPB.asProxy declare_maybe_authorization_id
                         <*> HsJSONPB.asProxy declare_maybe_epg_txn_id
                         <*> HsJSONPB.asProxy declare_maybe_root_reference_number
                         <*> HsJSONPB.asProxy declare_maybe_txn_detail_id
                         <*> HsJSONPB.asProxy declare_maybe_reference_id
                         <*> HsJSONPB.asProxy declare_maybe_unique_request_id
                         <*> HsJSONPB.asProxy declare_maybe_error_message
                         <*> HsJSONPB.asProxy declare_maybe_sent_to_gateway
                         <*> HsJSONPB.asProxy declare_maybe_response_code
                         <*> HsJSONPB.asProxy declare_maybe_internal_reference_id
                         <*> HsJSONPB.asProxy declare_maybe_refund_arn
                         <*> HsJSONPB.asProxy declare_maybe_initiated_by
                         <*> HsJSONPB.asProxy declare_maybe_refund_type
                         <*> HsJSONPB.asProxy declare_maybe_refund_source
                         <*> HsJSONPB.asProxy declare_maybe_last_modified
                         <*> HsJSONPB.asProxy declare_refund_event_type
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName = Hs.Just "Refund",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("id", refundId), ("amount", refundAmount),
                                                        ("date_created", refundDateCreated),
                                                        ("gateway", refundGateway),
                                                        ("processed", refundProcessed),
                                                        ("status", refundStatus),
                                                        ("maybe_authorization_id",
                                                         refundMaybeAuthorizationId),
                                                        ("maybe_epg_txn_id", refundMaybeEpgTxnId),
                                                        ("maybe_root_reference_number",
                                                         refundMaybeRootReferenceNumber),
                                                        ("maybe_txn_detail_id",
                                                         refundMaybeTxnDetailId),
                                                        ("maybe_reference_id",
                                                         refundMaybeReferenceId),
                                                        ("maybe_unique_request_id",
                                                         refundMaybeUniqueRequestId),
                                                        ("maybe_error_message",
                                                         refundMaybeErrorMessage),
                                                        ("maybe_sent_to_gateway",
                                                         refundMaybeSentToGateway),
                                                        ("maybe_response_code",
                                                         refundMaybeResponseCode),
                                                        ("maybe_internal_reference_id",
                                                         refundMaybeInternalReferenceId),
                                                        ("maybe_refund_arn", refundMaybeRefundArn),
                                                        ("maybe_initiated_by",
                                                         refundMaybeInitiatedBy),
                                                        ("maybe_refund_type",
                                                         refundMaybeRefundType),
                                                        ("maybe_refund_source",
                                                         refundMaybeRefundSource),
                                                        ("maybe_last_modified",
                                                         refundMaybeLastModified),
                                                        ("refund_event_type",
                                                         refundRefundEventType)]}})
 
data RefundMaybeAuthorizationId = RefundMaybeAuthorizationIdAuthorizationId Hs.Text
                                deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundMaybeAuthorizationId where
        nameOf _ = (Hs.fromString "RefundMaybeAuthorizationId")
 
instance HsJSONPB.ToSchema RefundMaybeAuthorizationId where
        declareNamedSchema _
          = do let declare_authorization_id = HsJSONPB.declareSchemaRef
               refundMaybeAuthorizationIdAuthorizationId <- declare_authorization_id
                                                              Proxy.Proxy
               let _ = Hs.pure RefundMaybeAuthorizationIdAuthorizationId <*>
                         HsJSONPB.asProxy declare_authorization_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RefundMaybeAuthorizationId",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("authorization_id",
                                                         refundMaybeAuthorizationIdAuthorizationId)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data RefundMaybeEpgTxnId = RefundMaybeEpgTxnIdEpgTxnId Hs.Text
                         deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundMaybeEpgTxnId where
        nameOf _ = (Hs.fromString "RefundMaybeEpgTxnId")
 
instance HsJSONPB.ToSchema RefundMaybeEpgTxnId where
        declareNamedSchema _
          = do let declare_epg_txn_id = HsJSONPB.declareSchemaRef
               refundMaybeEpgTxnIdEpgTxnId <- declare_epg_txn_id Proxy.Proxy
               let _ = Hs.pure RefundMaybeEpgTxnIdEpgTxnId <*>
                         HsJSONPB.asProxy declare_epg_txn_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RefundMaybeEpgTxnId",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("epg_txn_id",
                                                         refundMaybeEpgTxnIdEpgTxnId)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data RefundMaybeRootReferenceNumber = RefundMaybeRootReferenceNumberRootReferenceNumber Hs.Text
                                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundMaybeRootReferenceNumber where
        nameOf _ = (Hs.fromString "RefundMaybeRootReferenceNumber")
 
instance HsJSONPB.ToSchema RefundMaybeRootReferenceNumber where
        declareNamedSchema _
          = do let declare_root_reference_number = HsJSONPB.declareSchemaRef
               refundMaybeRootReferenceNumberRootReferenceNumber <- declare_root_reference_number
                                                                      Proxy.Proxy
               let _ = Hs.pure RefundMaybeRootReferenceNumberRootReferenceNumber
                         <*> HsJSONPB.asProxy declare_root_reference_number
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RefundMaybeRootReferenceNumber",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("root_reference_number",
                                                         refundMaybeRootReferenceNumberRootReferenceNumber)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data RefundMaybeTxnDetailId = RefundMaybeTxnDetailIdTxnDetailId Hs.Int64
                            deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundMaybeTxnDetailId where
        nameOf _ = (Hs.fromString "RefundMaybeTxnDetailId")
 
instance HsJSONPB.ToSchema RefundMaybeTxnDetailId where
        declareNamedSchema _
          = do let declare_txn_detail_id = HsJSONPB.declareSchemaRef
               refundMaybeTxnDetailIdTxnDetailId <- declare_txn_detail_id
                                                      Proxy.Proxy
               let _ = Hs.pure RefundMaybeTxnDetailIdTxnDetailId <*>
                         HsJSONPB.asProxy declare_txn_detail_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RefundMaybeTxnDetailId",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("txn_detail_id",
                                                         refundMaybeTxnDetailIdTxnDetailId)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data RefundMaybeReferenceId = RefundMaybeReferenceIdReferenceId Hs.Text
                            deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundMaybeReferenceId where
        nameOf _ = (Hs.fromString "RefundMaybeReferenceId")
 
instance HsJSONPB.ToSchema RefundMaybeReferenceId where
        declareNamedSchema _
          = do let declare_reference_id = HsJSONPB.declareSchemaRef
               refundMaybeReferenceIdReferenceId <- declare_reference_id
                                                      Proxy.Proxy
               let _ = Hs.pure RefundMaybeReferenceIdReferenceId <*>
                         HsJSONPB.asProxy declare_reference_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RefundMaybeReferenceId",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("reference_id",
                                                         refundMaybeReferenceIdReferenceId)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data RefundMaybeUniqueRequestId = RefundMaybeUniqueRequestIdUniqueRequestId Hs.Text
                                deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundMaybeUniqueRequestId where
        nameOf _ = (Hs.fromString "RefundMaybeUniqueRequestId")
 
instance HsJSONPB.ToSchema RefundMaybeUniqueRequestId where
        declareNamedSchema _
          = do let declare_unique_request_id = HsJSONPB.declareSchemaRef
               refundMaybeUniqueRequestIdUniqueRequestId <- declare_unique_request_id
                                                              Proxy.Proxy
               let _ = Hs.pure RefundMaybeUniqueRequestIdUniqueRequestId <*>
                         HsJSONPB.asProxy declare_unique_request_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RefundMaybeUniqueRequestId",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("unique_request_id",
                                                         refundMaybeUniqueRequestIdUniqueRequestId)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data RefundMaybeErrorMessage = RefundMaybeErrorMessageErrorMessage Hs.Text
                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundMaybeErrorMessage where
        nameOf _ = (Hs.fromString "RefundMaybeErrorMessage")
 
instance HsJSONPB.ToSchema RefundMaybeErrorMessage where
        declareNamedSchema _
          = do let declare_error_message = HsJSONPB.declareSchemaRef
               refundMaybeErrorMessageErrorMessage <- declare_error_message
                                                        Proxy.Proxy
               let _ = Hs.pure RefundMaybeErrorMessageErrorMessage <*>
                         HsJSONPB.asProxy declare_error_message
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RefundMaybeErrorMessage",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("error_message",
                                                         refundMaybeErrorMessageErrorMessage)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data RefundMaybeSentToGateway = RefundMaybeSentToGatewaySentToGateway Hs.Bool
                              deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundMaybeSentToGateway where
        nameOf _ = (Hs.fromString "RefundMaybeSentToGateway")
 
instance HsJSONPB.ToSchema RefundMaybeSentToGateway where
        declareNamedSchema _
          = do let declare_sent_to_gateway = HsJSONPB.declareSchemaRef
               refundMaybeSentToGatewaySentToGateway <- declare_sent_to_gateway
                                                          Proxy.Proxy
               let _ = Hs.pure RefundMaybeSentToGatewaySentToGateway <*>
                         HsJSONPB.asProxy declare_sent_to_gateway
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RefundMaybeSentToGateway",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("sent_to_gateway",
                                                         refundMaybeSentToGatewaySentToGateway)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data RefundMaybeResponseCode = RefundMaybeResponseCodeResponseCode Hs.Text
                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundMaybeResponseCode where
        nameOf _ = (Hs.fromString "RefundMaybeResponseCode")
 
instance HsJSONPB.ToSchema RefundMaybeResponseCode where
        declareNamedSchema _
          = do let declare_response_code = HsJSONPB.declareSchemaRef
               refundMaybeResponseCodeResponseCode <- declare_response_code
                                                        Proxy.Proxy
               let _ = Hs.pure RefundMaybeResponseCodeResponseCode <*>
                         HsJSONPB.asProxy declare_response_code
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RefundMaybeResponseCode",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("response_code",
                                                         refundMaybeResponseCodeResponseCode)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data RefundMaybeInternalReferenceId = RefundMaybeInternalReferenceIdInternalReferenceId Hs.Text
                                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundMaybeInternalReferenceId where
        nameOf _ = (Hs.fromString "RefundMaybeInternalReferenceId")
 
instance HsJSONPB.ToSchema RefundMaybeInternalReferenceId where
        declareNamedSchema _
          = do let declare_internal_reference_id = HsJSONPB.declareSchemaRef
               refundMaybeInternalReferenceIdInternalReferenceId <- declare_internal_reference_id
                                                                      Proxy.Proxy
               let _ = Hs.pure RefundMaybeInternalReferenceIdInternalReferenceId
                         <*> HsJSONPB.asProxy declare_internal_reference_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RefundMaybeInternalReferenceId",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("internal_reference_id",
                                                         refundMaybeInternalReferenceIdInternalReferenceId)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data RefundMaybeRefundArn = RefundMaybeRefundArnRefundArn Hs.Text
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundMaybeRefundArn where
        nameOf _ = (Hs.fromString "RefundMaybeRefundArn")
 
instance HsJSONPB.ToSchema RefundMaybeRefundArn where
        declareNamedSchema _
          = do let declare_refund_arn = HsJSONPB.declareSchemaRef
               refundMaybeRefundArnRefundArn <- declare_refund_arn Proxy.Proxy
               let _ = Hs.pure RefundMaybeRefundArnRefundArn <*>
                         HsJSONPB.asProxy declare_refund_arn
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RefundMaybeRefundArn",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("refund_arn",
                                                         refundMaybeRefundArnRefundArn)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data RefundMaybeInitiatedBy = RefundMaybeInitiatedByInitiatedBy Hs.Text
                            deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundMaybeInitiatedBy where
        nameOf _ = (Hs.fromString "RefundMaybeInitiatedBy")
 
instance HsJSONPB.ToSchema RefundMaybeInitiatedBy where
        declareNamedSchema _
          = do let declare_initiated_by = HsJSONPB.declareSchemaRef
               refundMaybeInitiatedByInitiatedBy <- declare_initiated_by
                                                      Proxy.Proxy
               let _ = Hs.pure RefundMaybeInitiatedByInitiatedBy <*>
                         HsJSONPB.asProxy declare_initiated_by
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RefundMaybeInitiatedBy",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("initiated_by",
                                                         refundMaybeInitiatedByInitiatedBy)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data RefundMaybeRefundType = RefundMaybeRefundTypeRefundType Hs.Text
                           deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundMaybeRefundType where
        nameOf _ = (Hs.fromString "RefundMaybeRefundType")
 
instance HsJSONPB.ToSchema RefundMaybeRefundType where
        declareNamedSchema _
          = do let declare_refund_type = HsJSONPB.declareSchemaRef
               refundMaybeRefundTypeRefundType <- declare_refund_type Proxy.Proxy
               let _ = Hs.pure RefundMaybeRefundTypeRefundType <*>
                         HsJSONPB.asProxy declare_refund_type
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RefundMaybeRefundType",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("refund_type",
                                                         refundMaybeRefundTypeRefundType)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data RefundMaybeRefundSource = RefundMaybeRefundSourceRefundSource Hs.Text
                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundMaybeRefundSource where
        nameOf _ = (Hs.fromString "RefundMaybeRefundSource")
 
instance HsJSONPB.ToSchema RefundMaybeRefundSource where
        declareNamedSchema _
          = do let declare_refund_source = HsJSONPB.declareSchemaRef
               refundMaybeRefundSourceRefundSource <- declare_refund_source
                                                        Proxy.Proxy
               let _ = Hs.pure RefundMaybeRefundSourceRefundSource <*>
                         HsJSONPB.asProxy declare_refund_source
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RefundMaybeRefundSource",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("refund_source",
                                                         refundMaybeRefundSourceRefundSource)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data RefundMaybeLastModified = RefundMaybeLastModifiedLastModified Hs.Int64
                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundMaybeLastModified where
        nameOf _ = (Hs.fromString "RefundMaybeLastModified")
 
instance HsJSONPB.ToSchema RefundMaybeLastModified where
        declareNamedSchema _
          = do let declare_last_modified = HsJSONPB.declareSchemaRef
               refundMaybeLastModifiedLastModified <- declare_last_modified
                                                        Proxy.Proxy
               let _ = Hs.pure RefundMaybeLastModifiedLastModified <*>
                         HsJSONPB.asProxy declare_last_modified
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RefundMaybeLastModified",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("last_modified",
                                                         refundMaybeLastModifiedLastModified)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data RefundStatus = RefundStatusNO_REFUND_STATUS
                  | RefundStatusFAILURE
                  | RefundStatusMANUAL_REVIEW
                  | RefundStatusPENDING
                  | RefundStatusSUCCESS
                  | RefundStatusTRANSACTION_FAILURE
                  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundStatus where
        nameOf _ = (Hs.fromString "RefundStatus")
 
instance HsProtobuf.HasDefault RefundStatus
 
instance Hs.Bounded RefundStatus where
        minBound = RefundStatusNO_REFUND_STATUS
        maxBound = RefundStatusTRANSACTION_FAILURE
 
instance Hs.Ord RefundStatus where
        compare x y
          = Hs.compare (HsProtobuf.fromProtoEnum x)
              (HsProtobuf.fromProtoEnum y)
 
instance HsProtobuf.ProtoEnum RefundStatus where
        toProtoEnumMay 0 = Hs.Just RefundStatusNO_REFUND_STATUS
        toProtoEnumMay 1 = Hs.Just RefundStatusFAILURE
        toProtoEnumMay 2 = Hs.Just RefundStatusMANUAL_REVIEW
        toProtoEnumMay 3 = Hs.Just RefundStatusPENDING
        toProtoEnumMay 4 = Hs.Just RefundStatusSUCCESS
        toProtoEnumMay 5 = Hs.Just RefundStatusTRANSACTION_FAILURE
        toProtoEnumMay _ = Hs.Nothing
        fromProtoEnum (RefundStatusNO_REFUND_STATUS) = 0
        fromProtoEnum (RefundStatusFAILURE) = 1
        fromProtoEnum (RefundStatusMANUAL_REVIEW) = 2
        fromProtoEnum (RefundStatusPENDING) = 3
        fromProtoEnum (RefundStatusSUCCESS) = 4
        fromProtoEnum (RefundStatusTRANSACTION_FAILURE) = 5
 
instance HsJSONPB.ToJSONPB RefundStatus where
        toJSONPB x _ = HsJSONPB.enumFieldString x
        toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
 
instance HsJSONPB.FromJSONPB RefundStatus where
        parseJSONPB (HsJSONPB.String "NO_REFUND_STATUS")
          = Hs.pure RefundStatusNO_REFUND_STATUS
        parseJSONPB (HsJSONPB.String "FAILURE")
          = Hs.pure RefundStatusFAILURE
        parseJSONPB (HsJSONPB.String "MANUAL_REVIEW")
          = Hs.pure RefundStatusMANUAL_REVIEW
        parseJSONPB (HsJSONPB.String "PENDING")
          = Hs.pure RefundStatusPENDING
        parseJSONPB (HsJSONPB.String "SUCCESS")
          = Hs.pure RefundStatusSUCCESS
        parseJSONPB (HsJSONPB.String "TRANSACTION_FAILURE")
          = Hs.pure RefundStatusTRANSACTION_FAILURE
        parseJSONPB v = (HsJSONPB.typeMismatch "RefundStatus" v)
 
instance HsJSONPB.ToJSON RefundStatus where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON RefundStatus where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsProtobuf.Finite RefundStatus
 
data RefundEventType = RefundEventTypeNO_REFUND_EVENT_TYPE
                     | RefundEventTypeREFUND_EVENT_CREATE
                     | RefundEventTypeREFUND_EVENT_UPDATE
                     deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named RefundEventType where
        nameOf _ = (Hs.fromString "RefundEventType")
 
instance HsProtobuf.HasDefault RefundEventType
 
instance Hs.Bounded RefundEventType where
        minBound = RefundEventTypeNO_REFUND_EVENT_TYPE
        maxBound = RefundEventTypeREFUND_EVENT_UPDATE
 
instance Hs.Ord RefundEventType where
        compare x y
          = Hs.compare (HsProtobuf.fromProtoEnum x)
              (HsProtobuf.fromProtoEnum y)
 
instance HsProtobuf.ProtoEnum RefundEventType where
        toProtoEnumMay 0 = Hs.Just RefundEventTypeNO_REFUND_EVENT_TYPE
        toProtoEnumMay 1 = Hs.Just RefundEventTypeREFUND_EVENT_CREATE
        toProtoEnumMay 2 = Hs.Just RefundEventTypeREFUND_EVENT_UPDATE
        toProtoEnumMay _ = Hs.Nothing
        fromProtoEnum (RefundEventTypeNO_REFUND_EVENT_TYPE) = 0
        fromProtoEnum (RefundEventTypeREFUND_EVENT_CREATE) = 1
        fromProtoEnum (RefundEventTypeREFUND_EVENT_UPDATE) = 2
 
instance HsJSONPB.ToJSONPB RefundEventType where
        toJSONPB x _ = HsJSONPB.enumFieldString x
        toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
 
instance HsJSONPB.FromJSONPB RefundEventType where
        parseJSONPB (HsJSONPB.String "NO_REFUND_EVENT_TYPE")
          = Hs.pure RefundEventTypeNO_REFUND_EVENT_TYPE
        parseJSONPB (HsJSONPB.String "REFUND_EVENT_CREATE")
          = Hs.pure RefundEventTypeREFUND_EVENT_CREATE
        parseJSONPB (HsJSONPB.String "REFUND_EVENT_UPDATE")
          = Hs.pure RefundEventTypeREFUND_EVENT_UPDATE
        parseJSONPB v = (HsJSONPB.typeMismatch "RefundEventType" v)
 
instance HsJSONPB.ToJSON RefundEventType where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON RefundEventType where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsProtobuf.Finite RefundEventType