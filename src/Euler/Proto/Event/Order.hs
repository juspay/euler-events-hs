{-# LANGUAGE DeriveGeneric     #-}
{-# LANGUAGE DeriveAnyClass    #-}
{-# LANGUAGE DataKinds         #-}
{-# LANGUAGE GADTs             #-}
{-# LANGUAGE TypeApplications  #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Euler.Proto.Event.Order where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Control.Applicative as Hs
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty(..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Unsafe.Coerce as Hs
 
data Order = Order{orderId :: Hs.Int64, orderVersion :: Hs.Int64,
                   orderAmount :: Hs.Double,
                   orderCurrency ::
                   HsProtobuf.Enumerated Euler.Proto.Event.Order.Currency,
                   orderMerchantId :: Hs.Text, orderOrderId :: Hs.Text,
                   orderOrderUuid :: Hs.Text,
                   orderOrderType ::
                   HsProtobuf.Enumerated Euler.Proto.Event.Order.OrderType,
                   orderOrderStatus ::
                   HsProtobuf.Enumerated Euler.Proto.Event.Order.OrderStatus,
                   orderUdf :: Hs.Maybe Euler.Proto.Event.Order.UDF,
                   orderAmountRefunded :: Hs.Double, orderRefundedEntirely :: Hs.Bool,
                   orderMandate ::
                   HsProtobuf.Enumerated Euler.Proto.Event.Order.MandateFeature,
                   orderDateCreated :: Hs.Int64, orderLastModified :: Hs.Int64,
                   orderMaybeCustomerId :: Hs.Maybe OrderMaybeCustomerId,
                   orderMaybeCustomerEmail :: Hs.Maybe OrderMaybeCustomerEmail,
                   orderMaybeCustomerPhone :: Hs.Maybe OrderMaybeCustomerPhone,
                   orderMaybeBillingAddressId :: Hs.Maybe OrderMaybeBillingAddressId,
                   orderMaybeShippingAddressId ::
                   Hs.Maybe OrderMaybeShippingAddressId,
                   orderMaybeDescription :: Hs.Maybe OrderMaybeDescription,
                   orderMaybeReturnUrl :: Hs.Maybe OrderMaybeReturnUrl,
                   orderMaybeProductId :: Hs.Maybe OrderMaybeProductId,
                   orderMaybeLastSynced :: Hs.Maybe OrderMaybeLastSynced,
                   orderOrderEventType ::
                   HsProtobuf.Enumerated Euler.Proto.Event.Order.OrderEventType}
           deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named Order where
        nameOf _ = (Hs.fromString "Order")
 
instance HsProtobuf.HasDefault Order
 
instance HsProtobuf.Message Order where
        encodeMessage _
          Order{orderId = orderId, orderVersion = orderVersion,
                orderAmount = orderAmount, orderCurrency = orderCurrency,
                orderMerchantId = orderMerchantId, orderOrderId = orderOrderId,
                orderOrderUuid = orderOrderUuid, orderOrderType = orderOrderType,
                orderOrderStatus = orderOrderStatus, orderUdf = orderUdf,
                orderAmountRefunded = orderAmountRefunded,
                orderRefundedEntirely = orderRefundedEntirely,
                orderMandate = orderMandate, orderDateCreated = orderDateCreated,
                orderLastModified = orderLastModified,
                orderMaybeCustomerId = orderMaybeCustomerId,
                orderMaybeCustomerEmail = orderMaybeCustomerEmail,
                orderMaybeCustomerPhone = orderMaybeCustomerPhone,
                orderMaybeBillingAddressId = orderMaybeBillingAddressId,
                orderMaybeShippingAddressId = orderMaybeShippingAddressId,
                orderMaybeDescription = orderMaybeDescription,
                orderMaybeReturnUrl = orderMaybeReturnUrl,
                orderMaybeProductId = orderMaybeProductId,
                orderMaybeLastSynced = orderMaybeLastSynced,
                orderOrderEventType = orderOrderEventType}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   orderId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   orderVersion),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   orderAmount),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   orderCurrency),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   orderMerchantId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                   orderOrderId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 7)
                   orderOrderUuid),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 8)
                   orderOrderType),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 9)
                   orderOrderStatus),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 10)
                   (Hs.coerce @(Hs.Maybe Euler.Proto.Event.Order.UDF)
                      @(HsProtobuf.Nested Euler.Proto.Event.Order.UDF)
                      orderUdf)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 11)
                   orderAmountRefunded),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 12)
                   orderRefundedEntirely),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 13)
                   orderMandate),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 14)
                   orderDateCreated),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 15)
                   orderLastModified),
                case orderMaybeCustomerId of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             OrderMaybeCustomerIdCustomerId y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 16)
                                     (HsProtobuf.ForceEmit y)),
                case orderMaybeCustomerEmail of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             OrderMaybeCustomerEmailCustomerEmail y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 17)
                                     (HsProtobuf.ForceEmit y)),
                case orderMaybeCustomerPhone of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             OrderMaybeCustomerPhoneCustomerPhone y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 18)
                                     (HsProtobuf.ForceEmit y)),
                case orderMaybeBillingAddressId of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             OrderMaybeBillingAddressIdBillingAddressId y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 19)
                                     (HsProtobuf.ForceEmit y)),
                case orderMaybeShippingAddressId of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             OrderMaybeShippingAddressIdShippingAddressId y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 20)
                                     (HsProtobuf.ForceEmit y)),
                case orderMaybeDescription of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             OrderMaybeDescriptionDescription y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 21)
                                     (HsProtobuf.ForceEmit y)),
                case orderMaybeReturnUrl of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             OrderMaybeReturnUrlReturnUrl y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 22)
                                     (HsProtobuf.ForceEmit y)),
                case orderMaybeProductId of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             OrderMaybeProductIdProductId y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 23)
                                     (HsProtobuf.ForceEmit y)),
                case orderMaybeLastSynced of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             OrderMaybeLastSyncedLastSynced y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 24)
                                     (HsProtobuf.ForceEmit y)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 25)
                   orderOrderEventType)])
        decodeMessage _
          = (Hs.pure Order) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 3))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 4))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 5))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 6))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 7))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 8))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 9))
              <*>
              (Hs.coerce @(_ (HsProtobuf.Nested Euler.Proto.Event.Order.UDF))
                 @(_ (Hs.Maybe Euler.Proto.Event.Order.UDF))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 10)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 11))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 12))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 13))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 14))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 15))
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 16),
                   (Hs.pure (Hs.Just Hs.. OrderMaybeCustomerIdCustomerId)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 17),
                   (Hs.pure (Hs.Just Hs.. OrderMaybeCustomerEmailCustomerEmail)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 18),
                   (Hs.pure (Hs.Just Hs.. OrderMaybeCustomerPhoneCustomerPhone)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 19),
                   (Hs.pure (Hs.Just Hs.. OrderMaybeBillingAddressIdBillingAddressId))
                     <*> HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 20),
                   (Hs.pure
                      (Hs.Just Hs.. OrderMaybeShippingAddressIdShippingAddressId))
                     <*> HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 21),
                   (Hs.pure (Hs.Just Hs.. OrderMaybeDescriptionDescription)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 22),
                   (Hs.pure (Hs.Just Hs.. OrderMaybeReturnUrlReturnUrl)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 23),
                   (Hs.pure (Hs.Just Hs.. OrderMaybeProductIdProductId)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 24),
                   (Hs.pure (Hs.Just Hs.. OrderMaybeLastSyncedLastSynced)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 25))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.Int64)
                (HsProtobuf.Single "id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.Int64)
                (HsProtobuf.Single "version")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim HsProtobuf.Double)
                (HsProtobuf.Single "amount")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Currency")))
                (HsProtobuf.Single "currency")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "merchant_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 6)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "order_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 7)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "order_uuid")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 8)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "OrderType")))
                (HsProtobuf.Single "order_type")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 9)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "OrderStatus")))
                (HsProtobuf.Single "order_status")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 10)
                (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "UDF")))
                (HsProtobuf.Single "udf")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 11)
                (HsProtobuf.Prim HsProtobuf.Double)
                (HsProtobuf.Single "amount_refunded")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 12)
                (HsProtobuf.Prim HsProtobuf.Bool)
                (HsProtobuf.Single "refunded_entirely")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 13)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "MandateFeature")))
                (HsProtobuf.Single "mandate")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 14)
                (HsProtobuf.Prim HsProtobuf.Int64)
                (HsProtobuf.Single "date_created")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 15)
                (HsProtobuf.Prim HsProtobuf.Int64)
                (HsProtobuf.Single "last_modified")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 25)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "OrderEventType")))
                (HsProtobuf.Single "order_event_type")
                []
                "")]
 
instance HsJSONPB.ToJSONPB Order where
        toJSONPB
          (Order f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15 f16 f17
             f18 f19 f20 f21 f22 f23 f24 f25)
          = (HsJSONPB.object
               ["id" .= f1, "version" .= f2, "amount" .= f3, "currency" .= f4,
                "merchant_id" .= f5, "order_id" .= f6, "order_uuid" .= f7,
                "order_type" .= f8, "order_status" .= f9, "udf" .= f10,
                "amount_refunded" .= f11, "refunded_entirely" .= f12,
                "mandate" .= f13, "date_created" .= f14, "last_modified" .= f15,
                (let encodeMaybe_customer_id
                       = (case f16 of
                              Hs.Just (OrderMaybeCustomerIdCustomerId f16)
                                -> (HsJSONPB.pair "customer_id" f16)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_customer_id" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_customer_id] options))
                         options
                       else encodeMaybe_customer_id options),
                (let encodeMaybe_customer_email
                       = (case f17 of
                              Hs.Just (OrderMaybeCustomerEmailCustomerEmail f17)
                                -> (HsJSONPB.pair "customer_email" f17)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_customer_email" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_customer_email] options))
                         options
                       else encodeMaybe_customer_email options),
                (let encodeMaybe_customer_phone
                       = (case f18 of
                              Hs.Just (OrderMaybeCustomerPhoneCustomerPhone f18)
                                -> (HsJSONPB.pair "customer_phone" f18)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_customer_phone" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_customer_phone] options))
                         options
                       else encodeMaybe_customer_phone options),
                (let encodeMaybe_billing_address_id
                       = (case f19 of
                              Hs.Just (OrderMaybeBillingAddressIdBillingAddressId f19)
                                -> (HsJSONPB.pair "billing_address_id" f19)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_billing_address_id" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_billing_address_id] options))
                         options
                       else encodeMaybe_billing_address_id options),
                (let encodeMaybe_shipping_address_id
                       = (case f20 of
                              Hs.Just (OrderMaybeShippingAddressIdShippingAddressId f20)
                                -> (HsJSONPB.pair "shipping_address_id" f20)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_shipping_address_id" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_shipping_address_id] options))
                         options
                       else encodeMaybe_shipping_address_id options),
                (let encodeMaybe_description
                       = (case f21 of
                              Hs.Just (OrderMaybeDescriptionDescription f21)
                                -> (HsJSONPB.pair "description" f21)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_description" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_description] options))
                         options
                       else encodeMaybe_description options),
                (let encodeMaybe_return_url
                       = (case f22 of
                              Hs.Just (OrderMaybeReturnUrlReturnUrl f22)
                                -> (HsJSONPB.pair "return_url" f22)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_return_url" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_return_url] options))
                         options
                       else encodeMaybe_return_url options),
                (let encodeMaybe_product_id
                       = (case f23 of
                              Hs.Just (OrderMaybeProductIdProductId f23)
                                -> (HsJSONPB.pair "product_id" f23)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_product_id" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_product_id] options))
                         options
                       else encodeMaybe_product_id options),
                (let encodeMaybe_last_synced
                       = (case f24 of
                              Hs.Just (OrderMaybeLastSyncedLastSynced f24)
                                -> (HsJSONPB.pair "last_synced" f24)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_last_synced" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_last_synced] options))
                         options
                       else encodeMaybe_last_synced options),
                "order_event_type" .= f25])
        toEncodingPB
          (Order f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15 f16 f17
             f18 f19 f20 f21 f22 f23 f24 f25)
          = (HsJSONPB.pairs
               ["id" .= f1, "version" .= f2, "amount" .= f3, "currency" .= f4,
                "merchant_id" .= f5, "order_id" .= f6, "order_uuid" .= f7,
                "order_type" .= f8, "order_status" .= f9, "udf" .= f10,
                "amount_refunded" .= f11, "refunded_entirely" .= f12,
                "mandate" .= f13, "date_created" .= f14, "last_modified" .= f15,
                (let encodeMaybe_customer_id
                       = (case f16 of
                              Hs.Just (OrderMaybeCustomerIdCustomerId f16)
                                -> (HsJSONPB.pair "customer_id" f16)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_customer_id" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_customer_id] options))
                         options
                       else encodeMaybe_customer_id options),
                (let encodeMaybe_customer_email
                       = (case f17 of
                              Hs.Just (OrderMaybeCustomerEmailCustomerEmail f17)
                                -> (HsJSONPB.pair "customer_email" f17)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_customer_email" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_customer_email] options))
                         options
                       else encodeMaybe_customer_email options),
                (let encodeMaybe_customer_phone
                       = (case f18 of
                              Hs.Just (OrderMaybeCustomerPhoneCustomerPhone f18)
                                -> (HsJSONPB.pair "customer_phone" f18)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_customer_phone" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_customer_phone] options))
                         options
                       else encodeMaybe_customer_phone options),
                (let encodeMaybe_billing_address_id
                       = (case f19 of
                              Hs.Just (OrderMaybeBillingAddressIdBillingAddressId f19)
                                -> (HsJSONPB.pair "billing_address_id" f19)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_billing_address_id" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_billing_address_id] options))
                         options
                       else encodeMaybe_billing_address_id options),
                (let encodeMaybe_shipping_address_id
                       = (case f20 of
                              Hs.Just (OrderMaybeShippingAddressIdShippingAddressId f20)
                                -> (HsJSONPB.pair "shipping_address_id" f20)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_shipping_address_id" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_shipping_address_id] options))
                         options
                       else encodeMaybe_shipping_address_id options),
                (let encodeMaybe_description
                       = (case f21 of
                              Hs.Just (OrderMaybeDescriptionDescription f21)
                                -> (HsJSONPB.pair "description" f21)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_description" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_description] options))
                         options
                       else encodeMaybe_description options),
                (let encodeMaybe_return_url
                       = (case f22 of
                              Hs.Just (OrderMaybeReturnUrlReturnUrl f22)
                                -> (HsJSONPB.pair "return_url" f22)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_return_url" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_return_url] options))
                         options
                       else encodeMaybe_return_url options),
                (let encodeMaybe_product_id
                       = (case f23 of
                              Hs.Just (OrderMaybeProductIdProductId f23)
                                -> (HsJSONPB.pair "product_id" f23)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_product_id" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_product_id] options))
                         options
                       else encodeMaybe_product_id options),
                (let encodeMaybe_last_synced
                       = (case f24 of
                              Hs.Just (OrderMaybeLastSyncedLastSynced f24)
                                -> (HsJSONPB.pair "last_synced" f24)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_last_synced" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_last_synced] options))
                         options
                       else encodeMaybe_last_synced options),
                "order_event_type" .= f25])
 
instance HsJSONPB.FromJSONPB Order where
        parseJSONPB
          = (HsJSONPB.withObject "Order"
               (\ obj ->
                  (Hs.pure Order) <*> obj .: "id" <*> obj .: "version" <*>
                    obj .: "amount"
                    <*> obj .: "currency"
                    <*> obj .: "merchant_id"
                    <*> obj .: "order_id"
                    <*> obj .: "order_uuid"
                    <*> obj .: "order_type"
                    <*> obj .: "order_status"
                    <*> obj .: "udf"
                    <*> obj .: "amount_refunded"
                    <*> obj .: "refunded_entirely"
                    <*> obj .: "mandate"
                    <*> obj .: "date_created"
                    <*> obj .: "last_modified"
                    <*>
                    (let parseMaybe_customer_id parseObj
                           = Hs.msum
                               [Hs.Just Hs.. OrderMaybeCustomerIdCustomerId <$>
                                  (HsJSONPB.parseField parseObj "customer_id"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_customer_id") Hs.>>=
                          (HsJSONPB.withObject "maybe_customer_id" parseMaybe_customer_id))
                         <|> (parseMaybe_customer_id obj))
                    <*>
                    (let parseMaybe_customer_email parseObj
                           = Hs.msum
                               [Hs.Just Hs.. OrderMaybeCustomerEmailCustomerEmail <$>
                                  (HsJSONPB.parseField parseObj "customer_email"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_customer_email") Hs.>>=
                          (HsJSONPB.withObject "maybe_customer_email"
                             parseMaybe_customer_email))
                         <|> (parseMaybe_customer_email obj))
                    <*>
                    (let parseMaybe_customer_phone parseObj
                           = Hs.msum
                               [Hs.Just Hs.. OrderMaybeCustomerPhoneCustomerPhone <$>
                                  (HsJSONPB.parseField parseObj "customer_phone"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_customer_phone") Hs.>>=
                          (HsJSONPB.withObject "maybe_customer_phone"
                             parseMaybe_customer_phone))
                         <|> (parseMaybe_customer_phone obj))
                    <*>
                    (let parseMaybe_billing_address_id parseObj
                           = Hs.msum
                               [Hs.Just Hs.. OrderMaybeBillingAddressIdBillingAddressId <$>
                                  (HsJSONPB.parseField parseObj "billing_address_id"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_billing_address_id") Hs.>>=
                          (HsJSONPB.withObject "maybe_billing_address_id"
                             parseMaybe_billing_address_id))
                         <|> (parseMaybe_billing_address_id obj))
                    <*>
                    (let parseMaybe_shipping_address_id parseObj
                           = Hs.msum
                               [Hs.Just Hs.. OrderMaybeShippingAddressIdShippingAddressId <$>
                                  (HsJSONPB.parseField parseObj "shipping_address_id"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_shipping_address_id") Hs.>>=
                          (HsJSONPB.withObject "maybe_shipping_address_id"
                             parseMaybe_shipping_address_id))
                         <|> (parseMaybe_shipping_address_id obj))
                    <*>
                    (let parseMaybe_description parseObj
                           = Hs.msum
                               [Hs.Just Hs.. OrderMaybeDescriptionDescription <$>
                                  (HsJSONPB.parseField parseObj "description"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_description") Hs.>>=
                          (HsJSONPB.withObject "maybe_description" parseMaybe_description))
                         <|> (parseMaybe_description obj))
                    <*>
                    (let parseMaybe_return_url parseObj
                           = Hs.msum
                               [Hs.Just Hs.. OrderMaybeReturnUrlReturnUrl <$>
                                  (HsJSONPB.parseField parseObj "return_url"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_return_url") Hs.>>=
                          (HsJSONPB.withObject "maybe_return_url" parseMaybe_return_url))
                         <|> (parseMaybe_return_url obj))
                    <*>
                    (let parseMaybe_product_id parseObj
                           = Hs.msum
                               [Hs.Just Hs.. OrderMaybeProductIdProductId <$>
                                  (HsJSONPB.parseField parseObj "product_id"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_product_id") Hs.>>=
                          (HsJSONPB.withObject "maybe_product_id" parseMaybe_product_id))
                         <|> (parseMaybe_product_id obj))
                    <*>
                    (let parseMaybe_last_synced parseObj
                           = Hs.msum
                               [Hs.Just Hs.. OrderMaybeLastSyncedLastSynced <$>
                                  (HsJSONPB.parseField parseObj "last_synced"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_last_synced") Hs.>>=
                          (HsJSONPB.withObject "maybe_last_synced" parseMaybe_last_synced))
                         <|> (parseMaybe_last_synced obj))
                    <*> obj .: "order_event_type"))
 
instance HsJSONPB.ToJSON Order where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON Order where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema Order where
        declareNamedSchema _
          = do let declare_id = HsJSONPB.declareSchemaRef
               orderId <- declare_id Proxy.Proxy
               let declare_version = HsJSONPB.declareSchemaRef
               orderVersion <- declare_version Proxy.Proxy
               let declare_amount = HsJSONPB.declareSchemaRef
               orderAmount <- declare_amount Proxy.Proxy
               let declare_currency = HsJSONPB.declareSchemaRef
               orderCurrency <- declare_currency Proxy.Proxy
               let declare_merchant_id = HsJSONPB.declareSchemaRef
               orderMerchantId <- declare_merchant_id Proxy.Proxy
               let declare_order_id = HsJSONPB.declareSchemaRef
               orderOrderId <- declare_order_id Proxy.Proxy
               let declare_order_uuid = HsJSONPB.declareSchemaRef
               orderOrderUuid <- declare_order_uuid Proxy.Proxy
               let declare_order_type = HsJSONPB.declareSchemaRef
               orderOrderType <- declare_order_type Proxy.Proxy
               let declare_order_status = HsJSONPB.declareSchemaRef
               orderOrderStatus <- declare_order_status Proxy.Proxy
               let declare_udf = HsJSONPB.declareSchemaRef
               orderUdf <- declare_udf Proxy.Proxy
               let declare_amount_refunded = HsJSONPB.declareSchemaRef
               orderAmountRefunded <- declare_amount_refunded Proxy.Proxy
               let declare_refunded_entirely = HsJSONPB.declareSchemaRef
               orderRefundedEntirely <- declare_refunded_entirely Proxy.Proxy
               let declare_mandate = HsJSONPB.declareSchemaRef
               orderMandate <- declare_mandate Proxy.Proxy
               let declare_date_created = HsJSONPB.declareSchemaRef
               orderDateCreated <- declare_date_created Proxy.Proxy
               let declare_last_modified = HsJSONPB.declareSchemaRef
               orderLastModified <- declare_last_modified Proxy.Proxy
               let declare_maybe_customer_id = HsJSONPB.declareSchemaRef
               orderMaybeCustomerId <- declare_maybe_customer_id Proxy.Proxy
               let declare_maybe_customer_email = HsJSONPB.declareSchemaRef
               orderMaybeCustomerEmail <- declare_maybe_customer_email Proxy.Proxy
               let declare_maybe_customer_phone = HsJSONPB.declareSchemaRef
               orderMaybeCustomerPhone <- declare_maybe_customer_phone Proxy.Proxy
               let declare_maybe_billing_address_id = HsJSONPB.declareSchemaRef
               orderMaybeBillingAddressId <- declare_maybe_billing_address_id
                                               Proxy.Proxy
               let declare_maybe_shipping_address_id = HsJSONPB.declareSchemaRef
               orderMaybeShippingAddressId <- declare_maybe_shipping_address_id
                                                Proxy.Proxy
               let declare_maybe_description = HsJSONPB.declareSchemaRef
               orderMaybeDescription <- declare_maybe_description Proxy.Proxy
               let declare_maybe_return_url = HsJSONPB.declareSchemaRef
               orderMaybeReturnUrl <- declare_maybe_return_url Proxy.Proxy
               let declare_maybe_product_id = HsJSONPB.declareSchemaRef
               orderMaybeProductId <- declare_maybe_product_id Proxy.Proxy
               let declare_maybe_last_synced = HsJSONPB.declareSchemaRef
               orderMaybeLastSynced <- declare_maybe_last_synced Proxy.Proxy
               let declare_order_event_type = HsJSONPB.declareSchemaRef
               orderOrderEventType <- declare_order_event_type Proxy.Proxy
               let _ = Hs.pure Order <*> HsJSONPB.asProxy declare_id <*>
                         HsJSONPB.asProxy declare_version
                         <*> HsJSONPB.asProxy declare_amount
                         <*> HsJSONPB.asProxy declare_currency
                         <*> HsJSONPB.asProxy declare_merchant_id
                         <*> HsJSONPB.asProxy declare_order_id
                         <*> HsJSONPB.asProxy declare_order_uuid
                         <*> HsJSONPB.asProxy declare_order_type
                         <*> HsJSONPB.asProxy declare_order_status
                         <*> HsJSONPB.asProxy declare_udf
                         <*> HsJSONPB.asProxy declare_amount_refunded
                         <*> HsJSONPB.asProxy declare_refunded_entirely
                         <*> HsJSONPB.asProxy declare_mandate
                         <*> HsJSONPB.asProxy declare_date_created
                         <*> HsJSONPB.asProxy declare_last_modified
                         <*> HsJSONPB.asProxy declare_maybe_customer_id
                         <*> HsJSONPB.asProxy declare_maybe_customer_email
                         <*> HsJSONPB.asProxy declare_maybe_customer_phone
                         <*> HsJSONPB.asProxy declare_maybe_billing_address_id
                         <*> HsJSONPB.asProxy declare_maybe_shipping_address_id
                         <*> HsJSONPB.asProxy declare_maybe_description
                         <*> HsJSONPB.asProxy declare_maybe_return_url
                         <*> HsJSONPB.asProxy declare_maybe_product_id
                         <*> HsJSONPB.asProxy declare_maybe_last_synced
                         <*> HsJSONPB.asProxy declare_order_event_type
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName = Hs.Just "Order",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("id", orderId), ("version", orderVersion),
                                                        ("amount", orderAmount),
                                                        ("currency", orderCurrency),
                                                        ("merchant_id", orderMerchantId),
                                                        ("order_id", orderOrderId),
                                                        ("order_uuid", orderOrderUuid),
                                                        ("order_type", orderOrderType),
                                                        ("order_status", orderOrderStatus),
                                                        ("udf", orderUdf),
                                                        ("amount_refunded", orderAmountRefunded),
                                                        ("refunded_entirely",
                                                         orderRefundedEntirely),
                                                        ("mandate", orderMandate),
                                                        ("date_created", orderDateCreated),
                                                        ("last_modified", orderLastModified),
                                                        ("maybe_customer_id", orderMaybeCustomerId),
                                                        ("maybe_customer_email",
                                                         orderMaybeCustomerEmail),
                                                        ("maybe_customer_phone",
                                                         orderMaybeCustomerPhone),
                                                        ("maybe_billing_address_id",
                                                         orderMaybeBillingAddressId),
                                                        ("maybe_shipping_address_id",
                                                         orderMaybeShippingAddressId),
                                                        ("maybe_description",
                                                         orderMaybeDescription),
                                                        ("maybe_return_url", orderMaybeReturnUrl),
                                                        ("maybe_product_id", orderMaybeProductId),
                                                        ("maybe_last_synced", orderMaybeLastSynced),
                                                        ("order_event_type",
                                                         orderOrderEventType)]}})
 
data OrderMaybeCustomerId = OrderMaybeCustomerIdCustomerId Hs.Text
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named OrderMaybeCustomerId where
        nameOf _ = (Hs.fromString "OrderMaybeCustomerId")
 
instance HsJSONPB.ToSchema OrderMaybeCustomerId where
        declareNamedSchema _
          = do let declare_customer_id = HsJSONPB.declareSchemaRef
               orderMaybeCustomerIdCustomerId <- declare_customer_id Proxy.Proxy
               let _ = Hs.pure OrderMaybeCustomerIdCustomerId <*>
                         HsJSONPB.asProxy declare_customer_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "OrderMaybeCustomerId",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("customer_id",
                                                         orderMaybeCustomerIdCustomerId)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data OrderMaybeCustomerEmail = OrderMaybeCustomerEmailCustomerEmail Hs.Text
                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named OrderMaybeCustomerEmail where
        nameOf _ = (Hs.fromString "OrderMaybeCustomerEmail")
 
instance HsJSONPB.ToSchema OrderMaybeCustomerEmail where
        declareNamedSchema _
          = do let declare_customer_email = HsJSONPB.declareSchemaRef
               orderMaybeCustomerEmailCustomerEmail <- declare_customer_email
                                                         Proxy.Proxy
               let _ = Hs.pure OrderMaybeCustomerEmailCustomerEmail <*>
                         HsJSONPB.asProxy declare_customer_email
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "OrderMaybeCustomerEmail",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("customer_email",
                                                         orderMaybeCustomerEmailCustomerEmail)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data OrderMaybeCustomerPhone = OrderMaybeCustomerPhoneCustomerPhone Hs.Text
                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named OrderMaybeCustomerPhone where
        nameOf _ = (Hs.fromString "OrderMaybeCustomerPhone")
 
instance HsJSONPB.ToSchema OrderMaybeCustomerPhone where
        declareNamedSchema _
          = do let declare_customer_phone = HsJSONPB.declareSchemaRef
               orderMaybeCustomerPhoneCustomerPhone <- declare_customer_phone
                                                         Proxy.Proxy
               let _ = Hs.pure OrderMaybeCustomerPhoneCustomerPhone <*>
                         HsJSONPB.asProxy declare_customer_phone
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "OrderMaybeCustomerPhone",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("customer_phone",
                                                         orderMaybeCustomerPhoneCustomerPhone)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data OrderMaybeBillingAddressId = OrderMaybeBillingAddressIdBillingAddressId Hs.Int64
                                deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named OrderMaybeBillingAddressId where
        nameOf _ = (Hs.fromString "OrderMaybeBillingAddressId")
 
instance HsJSONPB.ToSchema OrderMaybeBillingAddressId where
        declareNamedSchema _
          = do let declare_billing_address_id = HsJSONPB.declareSchemaRef
               orderMaybeBillingAddressIdBillingAddressId <- declare_billing_address_id
                                                               Proxy.Proxy
               let _ = Hs.pure OrderMaybeBillingAddressIdBillingAddressId <*>
                         HsJSONPB.asProxy declare_billing_address_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "OrderMaybeBillingAddressId",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("billing_address_id",
                                                         orderMaybeBillingAddressIdBillingAddressId)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data OrderMaybeShippingAddressId = OrderMaybeShippingAddressIdShippingAddressId Hs.Int64
                                 deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named OrderMaybeShippingAddressId where
        nameOf _ = (Hs.fromString "OrderMaybeShippingAddressId")
 
instance HsJSONPB.ToSchema OrderMaybeShippingAddressId where
        declareNamedSchema _
          = do let declare_shipping_address_id = HsJSONPB.declareSchemaRef
               orderMaybeShippingAddressIdShippingAddressId <- declare_shipping_address_id
                                                                 Proxy.Proxy
               let _ = Hs.pure OrderMaybeShippingAddressIdShippingAddressId <*>
                         HsJSONPB.asProxy declare_shipping_address_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "OrderMaybeShippingAddressId",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("shipping_address_id",
                                                         orderMaybeShippingAddressIdShippingAddressId)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data OrderMaybeDescription = OrderMaybeDescriptionDescription Hs.Text
                           deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named OrderMaybeDescription where
        nameOf _ = (Hs.fromString "OrderMaybeDescription")
 
instance HsJSONPB.ToSchema OrderMaybeDescription where
        declareNamedSchema _
          = do let declare_description = HsJSONPB.declareSchemaRef
               orderMaybeDescriptionDescription <- declare_description Proxy.Proxy
               let _ = Hs.pure OrderMaybeDescriptionDescription <*>
                         HsJSONPB.asProxy declare_description
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "OrderMaybeDescription",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("description",
                                                         orderMaybeDescriptionDescription)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data OrderMaybeReturnUrl = OrderMaybeReturnUrlReturnUrl Hs.Text
                         deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named OrderMaybeReturnUrl where
        nameOf _ = (Hs.fromString "OrderMaybeReturnUrl")
 
instance HsJSONPB.ToSchema OrderMaybeReturnUrl where
        declareNamedSchema _
          = do let declare_return_url = HsJSONPB.declareSchemaRef
               orderMaybeReturnUrlReturnUrl <- declare_return_url Proxy.Proxy
               let _ = Hs.pure OrderMaybeReturnUrlReturnUrl <*>
                         HsJSONPB.asProxy declare_return_url
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "OrderMaybeReturnUrl",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("return_url",
                                                         orderMaybeReturnUrlReturnUrl)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data OrderMaybeProductId = OrderMaybeProductIdProductId Hs.Text
                         deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named OrderMaybeProductId where
        nameOf _ = (Hs.fromString "OrderMaybeProductId")
 
instance HsJSONPB.ToSchema OrderMaybeProductId where
        declareNamedSchema _
          = do let declare_product_id = HsJSONPB.declareSchemaRef
               orderMaybeProductIdProductId <- declare_product_id Proxy.Proxy
               let _ = Hs.pure OrderMaybeProductIdProductId <*>
                         HsJSONPB.asProxy declare_product_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "OrderMaybeProductId",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("product_id",
                                                         orderMaybeProductIdProductId)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data OrderMaybeLastSynced = OrderMaybeLastSyncedLastSynced Hs.Int64
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named OrderMaybeLastSynced where
        nameOf _ = (Hs.fromString "OrderMaybeLastSynced")
 
instance HsJSONPB.ToSchema OrderMaybeLastSynced where
        declareNamedSchema _
          = do let declare_last_synced = HsJSONPB.declareSchemaRef
               orderMaybeLastSyncedLastSynced <- declare_last_synced Proxy.Proxy
               let _ = Hs.pure OrderMaybeLastSyncedLastSynced <*>
                         HsJSONPB.asProxy declare_last_synced
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "OrderMaybeLastSynced",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("last_synced",
                                                         orderMaybeLastSyncedLastSynced)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data Currency = CurrencyNO_CURRENCY
              | CurrencyINR
              | CurrencyUSD
              | CurrencyGBP
              | CurrencyEUR
              | CurrencyAED
              deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named Currency where
        nameOf _ = (Hs.fromString "Currency")
 
instance HsProtobuf.HasDefault Currency
 
instance Hs.Bounded Currency where
        minBound = CurrencyNO_CURRENCY
        maxBound = CurrencyAED
 
instance Hs.Ord Currency where
        compare x y
          = Hs.compare (HsProtobuf.fromProtoEnum x)
              (HsProtobuf.fromProtoEnum y)
 
instance HsProtobuf.ProtoEnum Currency where
        toProtoEnumMay 0 = Hs.Just CurrencyNO_CURRENCY
        toProtoEnumMay 1 = Hs.Just CurrencyINR
        toProtoEnumMay 2 = Hs.Just CurrencyUSD
        toProtoEnumMay 3 = Hs.Just CurrencyGBP
        toProtoEnumMay 4 = Hs.Just CurrencyEUR
        toProtoEnumMay 5 = Hs.Just CurrencyAED
        toProtoEnumMay _ = Hs.Nothing
        fromProtoEnum (CurrencyNO_CURRENCY) = 0
        fromProtoEnum (CurrencyINR) = 1
        fromProtoEnum (CurrencyUSD) = 2
        fromProtoEnum (CurrencyGBP) = 3
        fromProtoEnum (CurrencyEUR) = 4
        fromProtoEnum (CurrencyAED) = 5
 
instance HsJSONPB.ToJSONPB Currency where
        toJSONPB x _ = HsJSONPB.enumFieldString x
        toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
 
instance HsJSONPB.FromJSONPB Currency where
        parseJSONPB (HsJSONPB.String "NO_CURRENCY")
          = Hs.pure CurrencyNO_CURRENCY
        parseJSONPB (HsJSONPB.String "INR") = Hs.pure CurrencyINR
        parseJSONPB (HsJSONPB.String "USD") = Hs.pure CurrencyUSD
        parseJSONPB (HsJSONPB.String "GBP") = Hs.pure CurrencyGBP
        parseJSONPB (HsJSONPB.String "EUR") = Hs.pure CurrencyEUR
        parseJSONPB (HsJSONPB.String "AED") = Hs.pure CurrencyAED
        parseJSONPB v = (HsJSONPB.typeMismatch "Currency" v)
 
instance HsJSONPB.ToJSON Currency where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON Currency where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsProtobuf.Finite Currency
 
data OrderType = OrderTypeNO_ORDER_TYPE
               | OrderTypeMANDATE_REGISTER
               | OrderTypeMANDATE_PAYMENT
               | OrderTypeORDER_PAYMENT
               deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named OrderType where
        nameOf _ = (Hs.fromString "OrderType")
 
instance HsProtobuf.HasDefault OrderType
 
instance Hs.Bounded OrderType where
        minBound = OrderTypeNO_ORDER_TYPE
        maxBound = OrderTypeORDER_PAYMENT
 
instance Hs.Ord OrderType where
        compare x y
          = Hs.compare (HsProtobuf.fromProtoEnum x)
              (HsProtobuf.fromProtoEnum y)
 
instance HsProtobuf.ProtoEnum OrderType where
        toProtoEnumMay 0 = Hs.Just OrderTypeNO_ORDER_TYPE
        toProtoEnumMay 1 = Hs.Just OrderTypeMANDATE_REGISTER
        toProtoEnumMay 2 = Hs.Just OrderTypeMANDATE_PAYMENT
        toProtoEnumMay 3 = Hs.Just OrderTypeORDER_PAYMENT
        toProtoEnumMay _ = Hs.Nothing
        fromProtoEnum (OrderTypeNO_ORDER_TYPE) = 0
        fromProtoEnum (OrderTypeMANDATE_REGISTER) = 1
        fromProtoEnum (OrderTypeMANDATE_PAYMENT) = 2
        fromProtoEnum (OrderTypeORDER_PAYMENT) = 3
 
instance HsJSONPB.ToJSONPB OrderType where
        toJSONPB x _ = HsJSONPB.enumFieldString x
        toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
 
instance HsJSONPB.FromJSONPB OrderType where
        parseJSONPB (HsJSONPB.String "NO_ORDER_TYPE")
          = Hs.pure OrderTypeNO_ORDER_TYPE
        parseJSONPB (HsJSONPB.String "MANDATE_REGISTER")
          = Hs.pure OrderTypeMANDATE_REGISTER
        parseJSONPB (HsJSONPB.String "MANDATE_PAYMENT")
          = Hs.pure OrderTypeMANDATE_PAYMENT
        parseJSONPB (HsJSONPB.String "ORDER_PAYMENT")
          = Hs.pure OrderTypeORDER_PAYMENT
        parseJSONPB v = (HsJSONPB.typeMismatch "OrderType" v)
 
instance HsJSONPB.ToJSON OrderType where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON OrderType where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsProtobuf.Finite OrderType
 
data OrderStatus = OrderStatusNO_ORDER_STATUS
                 | OrderStatusORDER_STATUS_NEW
                 | OrderStatusORDER_STATUS_SUCCESS
                 | OrderStatusORDER_STATUS_NOT_FOUND
                 | OrderStatusORDER_STATUS_ERROR
                 | OrderStatusORDER_STATUS_JUSPAY_DECLINED
                 | OrderStatusORDER_STATUS_PENDING_AUTHENTICATION
                 | OrderStatusORDER_STATUS_AUTHENTICATION_FAILED
                 | OrderStatusORDER_STATUS_AUTHORIZATION_FAILED
                 | OrderStatusORDER_STATUS_AUTHORIZING
                 | OrderStatusORDER_STATUS_AUTHORIZED
                 | OrderStatusORDER_STATUS_CREATED
                 | OrderStatusORDER_STATUS_COD_INITIATED
                 | OrderStatusORDER_STATUS_VOIDED
                 | OrderStatusORDER_STATUS_VOID_INITIATED
                 | OrderStatusORDER_STATUS_CAPTURE_INITIATED
                 | OrderStatusORDER_STATUS_CAPTURE_FAILED
                 | OrderStatusORDER_STATUS_VOID_FAILED
                 | OrderStatusORDER_STATUS_AUTO_REFUNDED
                 deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named OrderStatus where
        nameOf _ = (Hs.fromString "OrderStatus")
 
instance HsProtobuf.HasDefault OrderStatus
 
instance Hs.Bounded OrderStatus where
        minBound = OrderStatusNO_ORDER_STATUS
        maxBound = OrderStatusORDER_STATUS_AUTO_REFUNDED
 
instance Hs.Ord OrderStatus where
        compare x y
          = Hs.compare (HsProtobuf.fromProtoEnum x)
              (HsProtobuf.fromProtoEnum y)
 
instance HsProtobuf.ProtoEnum OrderStatus where
        toProtoEnumMay 0 = Hs.Just OrderStatusNO_ORDER_STATUS
        toProtoEnumMay 1 = Hs.Just OrderStatusORDER_STATUS_NEW
        toProtoEnumMay 2 = Hs.Just OrderStatusORDER_STATUS_SUCCESS
        toProtoEnumMay 3 = Hs.Just OrderStatusORDER_STATUS_NOT_FOUND
        toProtoEnumMay 4 = Hs.Just OrderStatusORDER_STATUS_ERROR
        toProtoEnumMay 5 = Hs.Just OrderStatusORDER_STATUS_JUSPAY_DECLINED
        toProtoEnumMay 6
          = Hs.Just OrderStatusORDER_STATUS_PENDING_AUTHENTICATION
        toProtoEnumMay 7
          = Hs.Just OrderStatusORDER_STATUS_AUTHENTICATION_FAILED
        toProtoEnumMay 8
          = Hs.Just OrderStatusORDER_STATUS_AUTHORIZATION_FAILED
        toProtoEnumMay 9 = Hs.Just OrderStatusORDER_STATUS_AUTHORIZING
        toProtoEnumMay 10 = Hs.Just OrderStatusORDER_STATUS_AUTHORIZED
        toProtoEnumMay 11 = Hs.Just OrderStatusORDER_STATUS_CREATED
        toProtoEnumMay 12 = Hs.Just OrderStatusORDER_STATUS_COD_INITIATED
        toProtoEnumMay 13 = Hs.Just OrderStatusORDER_STATUS_VOIDED
        toProtoEnumMay 14 = Hs.Just OrderStatusORDER_STATUS_VOID_INITIATED
        toProtoEnumMay 15
          = Hs.Just OrderStatusORDER_STATUS_CAPTURE_INITIATED
        toProtoEnumMay 16 = Hs.Just OrderStatusORDER_STATUS_CAPTURE_FAILED
        toProtoEnumMay 17 = Hs.Just OrderStatusORDER_STATUS_VOID_FAILED
        toProtoEnumMay 18 = Hs.Just OrderStatusORDER_STATUS_AUTO_REFUNDED
        toProtoEnumMay _ = Hs.Nothing
        fromProtoEnum (OrderStatusNO_ORDER_STATUS) = 0
        fromProtoEnum (OrderStatusORDER_STATUS_NEW) = 1
        fromProtoEnum (OrderStatusORDER_STATUS_SUCCESS) = 2
        fromProtoEnum (OrderStatusORDER_STATUS_NOT_FOUND) = 3
        fromProtoEnum (OrderStatusORDER_STATUS_ERROR) = 4
        fromProtoEnum (OrderStatusORDER_STATUS_JUSPAY_DECLINED) = 5
        fromProtoEnum (OrderStatusORDER_STATUS_PENDING_AUTHENTICATION) = 6
        fromProtoEnum (OrderStatusORDER_STATUS_AUTHENTICATION_FAILED) = 7
        fromProtoEnum (OrderStatusORDER_STATUS_AUTHORIZATION_FAILED) = 8
        fromProtoEnum (OrderStatusORDER_STATUS_AUTHORIZING) = 9
        fromProtoEnum (OrderStatusORDER_STATUS_AUTHORIZED) = 10
        fromProtoEnum (OrderStatusORDER_STATUS_CREATED) = 11
        fromProtoEnum (OrderStatusORDER_STATUS_COD_INITIATED) = 12
        fromProtoEnum (OrderStatusORDER_STATUS_VOIDED) = 13
        fromProtoEnum (OrderStatusORDER_STATUS_VOID_INITIATED) = 14
        fromProtoEnum (OrderStatusORDER_STATUS_CAPTURE_INITIATED) = 15
        fromProtoEnum (OrderStatusORDER_STATUS_CAPTURE_FAILED) = 16
        fromProtoEnum (OrderStatusORDER_STATUS_VOID_FAILED) = 17
        fromProtoEnum (OrderStatusORDER_STATUS_AUTO_REFUNDED) = 18
 
instance HsJSONPB.ToJSONPB OrderStatus where
        toJSONPB x _ = HsJSONPB.enumFieldString x
        toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
 
instance HsJSONPB.FromJSONPB OrderStatus where
        parseJSONPB (HsJSONPB.String "NO_ORDER_STATUS")
          = Hs.pure OrderStatusNO_ORDER_STATUS
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_NEW")
          = Hs.pure OrderStatusORDER_STATUS_NEW
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_SUCCESS")
          = Hs.pure OrderStatusORDER_STATUS_SUCCESS
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_NOT_FOUND")
          = Hs.pure OrderStatusORDER_STATUS_NOT_FOUND
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_ERROR")
          = Hs.pure OrderStatusORDER_STATUS_ERROR
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_JUSPAY_DECLINED")
          = Hs.pure OrderStatusORDER_STATUS_JUSPAY_DECLINED
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_PENDING_AUTHENTICATION")
          = Hs.pure OrderStatusORDER_STATUS_PENDING_AUTHENTICATION
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_AUTHENTICATION_FAILED")
          = Hs.pure OrderStatusORDER_STATUS_AUTHENTICATION_FAILED
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_AUTHORIZATION_FAILED")
          = Hs.pure OrderStatusORDER_STATUS_AUTHORIZATION_FAILED
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_AUTHORIZING")
          = Hs.pure OrderStatusORDER_STATUS_AUTHORIZING
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_AUTHORIZED")
          = Hs.pure OrderStatusORDER_STATUS_AUTHORIZED
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_CREATED")
          = Hs.pure OrderStatusORDER_STATUS_CREATED
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_COD_INITIATED")
          = Hs.pure OrderStatusORDER_STATUS_COD_INITIATED
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_VOIDED")
          = Hs.pure OrderStatusORDER_STATUS_VOIDED
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_VOID_INITIATED")
          = Hs.pure OrderStatusORDER_STATUS_VOID_INITIATED
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_CAPTURE_INITIATED")
          = Hs.pure OrderStatusORDER_STATUS_CAPTURE_INITIATED
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_CAPTURE_FAILED")
          = Hs.pure OrderStatusORDER_STATUS_CAPTURE_FAILED
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_VOID_FAILED")
          = Hs.pure OrderStatusORDER_STATUS_VOID_FAILED
        parseJSONPB (HsJSONPB.String "ORDER_STATUS_AUTO_REFUNDED")
          = Hs.pure OrderStatusORDER_STATUS_AUTO_REFUNDED
        parseJSONPB v = (HsJSONPB.typeMismatch "OrderStatus" v)
 
instance HsJSONPB.ToJSON OrderStatus where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON OrderStatus where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsProtobuf.Finite OrderStatus
 
data UDF = UDF{udfMaybeUdf1 :: Hs.Maybe UDFMaybeUdf1,
               udfMaybeUdf2 :: Hs.Maybe UDFMaybeUdf2,
               udfMaybeUdf3 :: Hs.Maybe UDFMaybeUdf3,
               udfMaybeUdf4 :: Hs.Maybe UDFMaybeUdf4,
               udfMaybeUdf5 :: Hs.Maybe UDFMaybeUdf5,
               udfMaybeUdf6 :: Hs.Maybe UDFMaybeUdf6,
               udfMaybeUdf7 :: Hs.Maybe UDFMaybeUdf7,
               udfMaybeUdf8 :: Hs.Maybe UDFMaybeUdf8,
               udfMaybeUdf9 :: Hs.Maybe UDFMaybeUdf9,
               udfMaybeUdf10 :: Hs.Maybe UDFMaybeUdf10}
         deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UDF where
        nameOf _ = (Hs.fromString "UDF")
 
instance HsProtobuf.HasDefault UDF
 
instance HsProtobuf.Message UDF where
        encodeMessage _
          UDF{udfMaybeUdf1 = udfMaybeUdf1, udfMaybeUdf2 = udfMaybeUdf2,
              udfMaybeUdf3 = udfMaybeUdf3, udfMaybeUdf4 = udfMaybeUdf4,
              udfMaybeUdf5 = udfMaybeUdf5, udfMaybeUdf6 = udfMaybeUdf6,
              udfMaybeUdf7 = udfMaybeUdf7, udfMaybeUdf8 = udfMaybeUdf8,
              udfMaybeUdf9 = udfMaybeUdf9, udfMaybeUdf10 = udfMaybeUdf10}
          = (Hs.mconcat
               [case udfMaybeUdf1 of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             UDFMaybeUdf1Udf1 y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                                     (HsProtobuf.ForceEmit y)),
                case udfMaybeUdf2 of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             UDFMaybeUdf2Udf2 y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                                     (HsProtobuf.ForceEmit y)),
                case udfMaybeUdf3 of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             UDFMaybeUdf3Udf3 y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                                     (HsProtobuf.ForceEmit y)),
                case udfMaybeUdf4 of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             UDFMaybeUdf4Udf4 y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                                     (HsProtobuf.ForceEmit y)),
                case udfMaybeUdf5 of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             UDFMaybeUdf5Udf5 y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                                     (HsProtobuf.ForceEmit y)),
                case udfMaybeUdf6 of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             UDFMaybeUdf6Udf6 y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                                     (HsProtobuf.ForceEmit y)),
                case udfMaybeUdf7 of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             UDFMaybeUdf7Udf7 y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 7)
                                     (HsProtobuf.ForceEmit y)),
                case udfMaybeUdf8 of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             UDFMaybeUdf8Udf8 y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 8)
                                     (HsProtobuf.ForceEmit y)),
                case udfMaybeUdf9 of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             UDFMaybeUdf9Udf9 y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 9)
                                     (HsProtobuf.ForceEmit y)),
                case udfMaybeUdf10 of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             UDFMaybeUdf10Udf10 y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 10)
                                     (HsProtobuf.ForceEmit y))])
        decodeMessage _
          = (Hs.pure UDF) <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 1),
                   (Hs.pure (Hs.Just Hs.. UDFMaybeUdf1Udf1)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 2),
                   (Hs.pure (Hs.Just Hs.. UDFMaybeUdf2Udf2)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 3),
                   (Hs.pure (Hs.Just Hs.. UDFMaybeUdf3Udf3)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 4),
                   (Hs.pure (Hs.Just Hs.. UDFMaybeUdf4Udf4)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 5),
                   (Hs.pure (Hs.Just Hs.. UDFMaybeUdf5Udf5)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 6),
                   (Hs.pure (Hs.Just Hs.. UDFMaybeUdf6Udf6)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 7),
                   (Hs.pure (Hs.Just Hs.. UDFMaybeUdf7Udf7)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 8),
                   (Hs.pure (Hs.Just Hs.. UDFMaybeUdf8Udf8)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 9),
                   (Hs.pure (Hs.Just Hs.. UDFMaybeUdf9Udf9)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 10),
                   (Hs.pure (Hs.Just Hs.. UDFMaybeUdf10Udf10)) <*>
                     HsProtobuf.decodeMessageField)])
        dotProto _ = []
 
instance HsJSONPB.ToJSONPB UDF where
        toJSONPB (UDF f1 f2 f3 f4 f5 f6 f7 f8 f9 f10)
          = (HsJSONPB.object
               [(let encodeMaybe_udf1
                       = (case f1 of
                              Hs.Just (UDFMaybeUdf1Udf1 f1) -> (HsJSONPB.pair "udf1" f1)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf1" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_udf1] options))
                         options
                       else encodeMaybe_udf1 options),
                (let encodeMaybe_udf2
                       = (case f2 of
                              Hs.Just (UDFMaybeUdf2Udf2 f2) -> (HsJSONPB.pair "udf2" f2)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf2" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_udf2] options))
                         options
                       else encodeMaybe_udf2 options),
                (let encodeMaybe_udf3
                       = (case f3 of
                              Hs.Just (UDFMaybeUdf3Udf3 f3) -> (HsJSONPB.pair "udf3" f3)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf3" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_udf3] options))
                         options
                       else encodeMaybe_udf3 options),
                (let encodeMaybe_udf4
                       = (case f4 of
                              Hs.Just (UDFMaybeUdf4Udf4 f4) -> (HsJSONPB.pair "udf4" f4)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf4" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_udf4] options))
                         options
                       else encodeMaybe_udf4 options),
                (let encodeMaybe_udf5
                       = (case f5 of
                              Hs.Just (UDFMaybeUdf5Udf5 f5) -> (HsJSONPB.pair "udf5" f5)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf5" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_udf5] options))
                         options
                       else encodeMaybe_udf5 options),
                (let encodeMaybe_udf6
                       = (case f6 of
                              Hs.Just (UDFMaybeUdf6Udf6 f6) -> (HsJSONPB.pair "udf6" f6)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf6" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_udf6] options))
                         options
                       else encodeMaybe_udf6 options),
                (let encodeMaybe_udf7
                       = (case f7 of
                              Hs.Just (UDFMaybeUdf7Udf7 f7) -> (HsJSONPB.pair "udf7" f7)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf7" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_udf7] options))
                         options
                       else encodeMaybe_udf7 options),
                (let encodeMaybe_udf8
                       = (case f8 of
                              Hs.Just (UDFMaybeUdf8Udf8 f8) -> (HsJSONPB.pair "udf8" f8)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf8" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_udf8] options))
                         options
                       else encodeMaybe_udf8 options),
                (let encodeMaybe_udf9
                       = (case f9 of
                              Hs.Just (UDFMaybeUdf9Udf9 f9) -> (HsJSONPB.pair "udf9" f9)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf9" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_udf9] options))
                         options
                       else encodeMaybe_udf9 options),
                (let encodeMaybe_udf10
                       = (case f10 of
                              Hs.Just (UDFMaybeUdf10Udf10 f10) -> (HsJSONPB.pair "udf10" f10)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf10" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_udf10] options))
                         options
                       else encodeMaybe_udf10 options)])
        toEncodingPB (UDF f1 f2 f3 f4 f5 f6 f7 f8 f9 f10)
          = (HsJSONPB.pairs
               [(let encodeMaybe_udf1
                       = (case f1 of
                              Hs.Just (UDFMaybeUdf1Udf1 f1) -> (HsJSONPB.pair "udf1" f1)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf1" .= (HsJSONPB.pairsOrNull [encodeMaybe_udf1] options))
                         options
                       else encodeMaybe_udf1 options),
                (let encodeMaybe_udf2
                       = (case f2 of
                              Hs.Just (UDFMaybeUdf2Udf2 f2) -> (HsJSONPB.pair "udf2" f2)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf2" .= (HsJSONPB.pairsOrNull [encodeMaybe_udf2] options))
                         options
                       else encodeMaybe_udf2 options),
                (let encodeMaybe_udf3
                       = (case f3 of
                              Hs.Just (UDFMaybeUdf3Udf3 f3) -> (HsJSONPB.pair "udf3" f3)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf3" .= (HsJSONPB.pairsOrNull [encodeMaybe_udf3] options))
                         options
                       else encodeMaybe_udf3 options),
                (let encodeMaybe_udf4
                       = (case f4 of
                              Hs.Just (UDFMaybeUdf4Udf4 f4) -> (HsJSONPB.pair "udf4" f4)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf4" .= (HsJSONPB.pairsOrNull [encodeMaybe_udf4] options))
                         options
                       else encodeMaybe_udf4 options),
                (let encodeMaybe_udf5
                       = (case f5 of
                              Hs.Just (UDFMaybeUdf5Udf5 f5) -> (HsJSONPB.pair "udf5" f5)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf5" .= (HsJSONPB.pairsOrNull [encodeMaybe_udf5] options))
                         options
                       else encodeMaybe_udf5 options),
                (let encodeMaybe_udf6
                       = (case f6 of
                              Hs.Just (UDFMaybeUdf6Udf6 f6) -> (HsJSONPB.pair "udf6" f6)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf6" .= (HsJSONPB.pairsOrNull [encodeMaybe_udf6] options))
                         options
                       else encodeMaybe_udf6 options),
                (let encodeMaybe_udf7
                       = (case f7 of
                              Hs.Just (UDFMaybeUdf7Udf7 f7) -> (HsJSONPB.pair "udf7" f7)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf7" .= (HsJSONPB.pairsOrNull [encodeMaybe_udf7] options))
                         options
                       else encodeMaybe_udf7 options),
                (let encodeMaybe_udf8
                       = (case f8 of
                              Hs.Just (UDFMaybeUdf8Udf8 f8) -> (HsJSONPB.pair "udf8" f8)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf8" .= (HsJSONPB.pairsOrNull [encodeMaybe_udf8] options))
                         options
                       else encodeMaybe_udf8 options),
                (let encodeMaybe_udf9
                       = (case f9 of
                              Hs.Just (UDFMaybeUdf9Udf9 f9) -> (HsJSONPB.pair "udf9" f9)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf9" .= (HsJSONPB.pairsOrNull [encodeMaybe_udf9] options))
                         options
                       else encodeMaybe_udf9 options),
                (let encodeMaybe_udf10
                       = (case f10 of
                              Hs.Just (UDFMaybeUdf10Udf10 f10) -> (HsJSONPB.pair "udf10" f10)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_udf10" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_udf10] options))
                         options
                       else encodeMaybe_udf10 options)])
 
instance HsJSONPB.FromJSONPB UDF where
        parseJSONPB
          = (HsJSONPB.withObject "UDF"
               (\ obj ->
                  (Hs.pure UDF) <*>
                    (let parseMaybe_udf1 parseObj
                           = Hs.msum
                               [Hs.Just Hs.. UDFMaybeUdf1Udf1 <$>
                                  (HsJSONPB.parseField parseObj "udf1"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_udf1") Hs.>>=
                          (HsJSONPB.withObject "maybe_udf1" parseMaybe_udf1))
                         <|> (parseMaybe_udf1 obj))
                    <*>
                    (let parseMaybe_udf2 parseObj
                           = Hs.msum
                               [Hs.Just Hs.. UDFMaybeUdf2Udf2 <$>
                                  (HsJSONPB.parseField parseObj "udf2"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_udf2") Hs.>>=
                          (HsJSONPB.withObject "maybe_udf2" parseMaybe_udf2))
                         <|> (parseMaybe_udf2 obj))
                    <*>
                    (let parseMaybe_udf3 parseObj
                           = Hs.msum
                               [Hs.Just Hs.. UDFMaybeUdf3Udf3 <$>
                                  (HsJSONPB.parseField parseObj "udf3"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_udf3") Hs.>>=
                          (HsJSONPB.withObject "maybe_udf3" parseMaybe_udf3))
                         <|> (parseMaybe_udf3 obj))
                    <*>
                    (let parseMaybe_udf4 parseObj
                           = Hs.msum
                               [Hs.Just Hs.. UDFMaybeUdf4Udf4 <$>
                                  (HsJSONPB.parseField parseObj "udf4"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_udf4") Hs.>>=
                          (HsJSONPB.withObject "maybe_udf4" parseMaybe_udf4))
                         <|> (parseMaybe_udf4 obj))
                    <*>
                    (let parseMaybe_udf5 parseObj
                           = Hs.msum
                               [Hs.Just Hs.. UDFMaybeUdf5Udf5 <$>
                                  (HsJSONPB.parseField parseObj "udf5"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_udf5") Hs.>>=
                          (HsJSONPB.withObject "maybe_udf5" parseMaybe_udf5))
                         <|> (parseMaybe_udf5 obj))
                    <*>
                    (let parseMaybe_udf6 parseObj
                           = Hs.msum
                               [Hs.Just Hs.. UDFMaybeUdf6Udf6 <$>
                                  (HsJSONPB.parseField parseObj "udf6"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_udf6") Hs.>>=
                          (HsJSONPB.withObject "maybe_udf6" parseMaybe_udf6))
                         <|> (parseMaybe_udf6 obj))
                    <*>
                    (let parseMaybe_udf7 parseObj
                           = Hs.msum
                               [Hs.Just Hs.. UDFMaybeUdf7Udf7 <$>
                                  (HsJSONPB.parseField parseObj "udf7"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_udf7") Hs.>>=
                          (HsJSONPB.withObject "maybe_udf7" parseMaybe_udf7))
                         <|> (parseMaybe_udf7 obj))
                    <*>
                    (let parseMaybe_udf8 parseObj
                           = Hs.msum
                               [Hs.Just Hs.. UDFMaybeUdf8Udf8 <$>
                                  (HsJSONPB.parseField parseObj "udf8"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_udf8") Hs.>>=
                          (HsJSONPB.withObject "maybe_udf8" parseMaybe_udf8))
                         <|> (parseMaybe_udf8 obj))
                    <*>
                    (let parseMaybe_udf9 parseObj
                           = Hs.msum
                               [Hs.Just Hs.. UDFMaybeUdf9Udf9 <$>
                                  (HsJSONPB.parseField parseObj "udf9"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_udf9") Hs.>>=
                          (HsJSONPB.withObject "maybe_udf9" parseMaybe_udf9))
                         <|> (parseMaybe_udf9 obj))
                    <*>
                    (let parseMaybe_udf10 parseObj
                           = Hs.msum
                               [Hs.Just Hs.. UDFMaybeUdf10Udf10 <$>
                                  (HsJSONPB.parseField parseObj "udf10"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_udf10") Hs.>>=
                          (HsJSONPB.withObject "maybe_udf10" parseMaybe_udf10))
                         <|> (parseMaybe_udf10 obj))))
 
instance HsJSONPB.ToJSON UDF where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON UDF where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema UDF where
        declareNamedSchema _
          = do let declare_maybe_udf1 = HsJSONPB.declareSchemaRef
               udfMaybeUdf1 <- declare_maybe_udf1 Proxy.Proxy
               let declare_maybe_udf2 = HsJSONPB.declareSchemaRef
               udfMaybeUdf2 <- declare_maybe_udf2 Proxy.Proxy
               let declare_maybe_udf3 = HsJSONPB.declareSchemaRef
               udfMaybeUdf3 <- declare_maybe_udf3 Proxy.Proxy
               let declare_maybe_udf4 = HsJSONPB.declareSchemaRef
               udfMaybeUdf4 <- declare_maybe_udf4 Proxy.Proxy
               let declare_maybe_udf5 = HsJSONPB.declareSchemaRef
               udfMaybeUdf5 <- declare_maybe_udf5 Proxy.Proxy
               let declare_maybe_udf6 = HsJSONPB.declareSchemaRef
               udfMaybeUdf6 <- declare_maybe_udf6 Proxy.Proxy
               let declare_maybe_udf7 = HsJSONPB.declareSchemaRef
               udfMaybeUdf7 <- declare_maybe_udf7 Proxy.Proxy
               let declare_maybe_udf8 = HsJSONPB.declareSchemaRef
               udfMaybeUdf8 <- declare_maybe_udf8 Proxy.Proxy
               let declare_maybe_udf9 = HsJSONPB.declareSchemaRef
               udfMaybeUdf9 <- declare_maybe_udf9 Proxy.Proxy
               let declare_maybe_udf10 = HsJSONPB.declareSchemaRef
               udfMaybeUdf10 <- declare_maybe_udf10 Proxy.Proxy
               let _ = Hs.pure UDF <*> HsJSONPB.asProxy declare_maybe_udf1 <*>
                         HsJSONPB.asProxy declare_maybe_udf2
                         <*> HsJSONPB.asProxy declare_maybe_udf3
                         <*> HsJSONPB.asProxy declare_maybe_udf4
                         <*> HsJSONPB.asProxy declare_maybe_udf5
                         <*> HsJSONPB.asProxy declare_maybe_udf6
                         <*> HsJSONPB.asProxy declare_maybe_udf7
                         <*> HsJSONPB.asProxy declare_maybe_udf8
                         <*> HsJSONPB.asProxy declare_maybe_udf9
                         <*> HsJSONPB.asProxy declare_maybe_udf10
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName = Hs.Just "UDF",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("maybe_udf1", udfMaybeUdf1),
                                                        ("maybe_udf2", udfMaybeUdf2),
                                                        ("maybe_udf3", udfMaybeUdf3),
                                                        ("maybe_udf4", udfMaybeUdf4),
                                                        ("maybe_udf5", udfMaybeUdf5),
                                                        ("maybe_udf6", udfMaybeUdf6),
                                                        ("maybe_udf7", udfMaybeUdf7),
                                                        ("maybe_udf8", udfMaybeUdf8),
                                                        ("maybe_udf9", udfMaybeUdf9),
                                                        ("maybe_udf10", udfMaybeUdf10)]}})
 
data UDFMaybeUdf1 = UDFMaybeUdf1Udf1 Hs.Text
                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UDFMaybeUdf1 where
        nameOf _ = (Hs.fromString "UDFMaybeUdf1")
 
instance HsJSONPB.ToSchema UDFMaybeUdf1 where
        declareNamedSchema _
          = do let declare_udf1 = HsJSONPB.declareSchemaRef
               udfmaybeUdf1Udf1 <- declare_udf1 Proxy.Proxy
               let _ = Hs.pure UDFMaybeUdf1Udf1 <*> HsJSONPB.asProxy declare_udf1
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UDFMaybeUdf1",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("udf1", udfmaybeUdf1Udf1)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data UDFMaybeUdf2 = UDFMaybeUdf2Udf2 Hs.Text
                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UDFMaybeUdf2 where
        nameOf _ = (Hs.fromString "UDFMaybeUdf2")
 
instance HsJSONPB.ToSchema UDFMaybeUdf2 where
        declareNamedSchema _
          = do let declare_udf2 = HsJSONPB.declareSchemaRef
               udfmaybeUdf2Udf2 <- declare_udf2 Proxy.Proxy
               let _ = Hs.pure UDFMaybeUdf2Udf2 <*> HsJSONPB.asProxy declare_udf2
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UDFMaybeUdf2",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("udf2", udfmaybeUdf2Udf2)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data UDFMaybeUdf3 = UDFMaybeUdf3Udf3 Hs.Text
                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UDFMaybeUdf3 where
        nameOf _ = (Hs.fromString "UDFMaybeUdf3")
 
instance HsJSONPB.ToSchema UDFMaybeUdf3 where
        declareNamedSchema _
          = do let declare_udf3 = HsJSONPB.declareSchemaRef
               udfmaybeUdf3Udf3 <- declare_udf3 Proxy.Proxy
               let _ = Hs.pure UDFMaybeUdf3Udf3 <*> HsJSONPB.asProxy declare_udf3
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UDFMaybeUdf3",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("udf3", udfmaybeUdf3Udf3)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data UDFMaybeUdf4 = UDFMaybeUdf4Udf4 Hs.Text
                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UDFMaybeUdf4 where
        nameOf _ = (Hs.fromString "UDFMaybeUdf4")
 
instance HsJSONPB.ToSchema UDFMaybeUdf4 where
        declareNamedSchema _
          = do let declare_udf4 = HsJSONPB.declareSchemaRef
               udfmaybeUdf4Udf4 <- declare_udf4 Proxy.Proxy
               let _ = Hs.pure UDFMaybeUdf4Udf4 <*> HsJSONPB.asProxy declare_udf4
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UDFMaybeUdf4",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("udf4", udfmaybeUdf4Udf4)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data UDFMaybeUdf5 = UDFMaybeUdf5Udf5 Hs.Text
                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UDFMaybeUdf5 where
        nameOf _ = (Hs.fromString "UDFMaybeUdf5")
 
instance HsJSONPB.ToSchema UDFMaybeUdf5 where
        declareNamedSchema _
          = do let declare_udf5 = HsJSONPB.declareSchemaRef
               udfmaybeUdf5Udf5 <- declare_udf5 Proxy.Proxy
               let _ = Hs.pure UDFMaybeUdf5Udf5 <*> HsJSONPB.asProxy declare_udf5
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UDFMaybeUdf5",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("udf5", udfmaybeUdf5Udf5)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data UDFMaybeUdf6 = UDFMaybeUdf6Udf6 Hs.Text
                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UDFMaybeUdf6 where
        nameOf _ = (Hs.fromString "UDFMaybeUdf6")
 
instance HsJSONPB.ToSchema UDFMaybeUdf6 where
        declareNamedSchema _
          = do let declare_udf6 = HsJSONPB.declareSchemaRef
               udfmaybeUdf6Udf6 <- declare_udf6 Proxy.Proxy
               let _ = Hs.pure UDFMaybeUdf6Udf6 <*> HsJSONPB.asProxy declare_udf6
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UDFMaybeUdf6",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("udf6", udfmaybeUdf6Udf6)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data UDFMaybeUdf7 = UDFMaybeUdf7Udf7 Hs.Text
                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UDFMaybeUdf7 where
        nameOf _ = (Hs.fromString "UDFMaybeUdf7")
 
instance HsJSONPB.ToSchema UDFMaybeUdf7 where
        declareNamedSchema _
          = do let declare_udf7 = HsJSONPB.declareSchemaRef
               udfmaybeUdf7Udf7 <- declare_udf7 Proxy.Proxy
               let _ = Hs.pure UDFMaybeUdf7Udf7 <*> HsJSONPB.asProxy declare_udf7
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UDFMaybeUdf7",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("udf7", udfmaybeUdf7Udf7)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data UDFMaybeUdf8 = UDFMaybeUdf8Udf8 Hs.Text
                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UDFMaybeUdf8 where
        nameOf _ = (Hs.fromString "UDFMaybeUdf8")
 
instance HsJSONPB.ToSchema UDFMaybeUdf8 where
        declareNamedSchema _
          = do let declare_udf8 = HsJSONPB.declareSchemaRef
               udfmaybeUdf8Udf8 <- declare_udf8 Proxy.Proxy
               let _ = Hs.pure UDFMaybeUdf8Udf8 <*> HsJSONPB.asProxy declare_udf8
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UDFMaybeUdf8",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("udf8", udfmaybeUdf8Udf8)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data UDFMaybeUdf9 = UDFMaybeUdf9Udf9 Hs.Text
                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UDFMaybeUdf9 where
        nameOf _ = (Hs.fromString "UDFMaybeUdf9")
 
instance HsJSONPB.ToSchema UDFMaybeUdf9 where
        declareNamedSchema _
          = do let declare_udf9 = HsJSONPB.declareSchemaRef
               udfmaybeUdf9Udf9 <- declare_udf9 Proxy.Proxy
               let _ = Hs.pure UDFMaybeUdf9Udf9 <*> HsJSONPB.asProxy declare_udf9
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UDFMaybeUdf9",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("udf9", udfmaybeUdf9Udf9)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data UDFMaybeUdf10 = UDFMaybeUdf10Udf10 Hs.Text
                   deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named UDFMaybeUdf10 where
        nameOf _ = (Hs.fromString "UDFMaybeUdf10")
 
instance HsJSONPB.ToSchema UDFMaybeUdf10 where
        declareNamedSchema _
          = do let declare_udf10 = HsJSONPB.declareSchemaRef
               udfmaybeUdf10Udf10 <- declare_udf10 Proxy.Proxy
               let _ = Hs.pure UDFMaybeUdf10Udf10 <*>
                         HsJSONPB.asProxy declare_udf10
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UDFMaybeUdf10",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("udf10", udfmaybeUdf10Udf10)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data MandateFeature = MandateFeatureNO_MANDATE_FEATURE
                    | MandateFeatureDISABLED
                    | MandateFeatureREQUIRED
                    | MandateFeatureOPTIONAL
                    deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateFeature where
        nameOf _ = (Hs.fromString "MandateFeature")
 
instance HsProtobuf.HasDefault MandateFeature
 
instance Hs.Bounded MandateFeature where
        minBound = MandateFeatureNO_MANDATE_FEATURE
        maxBound = MandateFeatureOPTIONAL
 
instance Hs.Ord MandateFeature where
        compare x y
          = Hs.compare (HsProtobuf.fromProtoEnum x)
              (HsProtobuf.fromProtoEnum y)
 
instance HsProtobuf.ProtoEnum MandateFeature where
        toProtoEnumMay 0 = Hs.Just MandateFeatureNO_MANDATE_FEATURE
        toProtoEnumMay 1 = Hs.Just MandateFeatureDISABLED
        toProtoEnumMay 2 = Hs.Just MandateFeatureREQUIRED
        toProtoEnumMay 3 = Hs.Just MandateFeatureOPTIONAL
        toProtoEnumMay _ = Hs.Nothing
        fromProtoEnum (MandateFeatureNO_MANDATE_FEATURE) = 0
        fromProtoEnum (MandateFeatureDISABLED) = 1
        fromProtoEnum (MandateFeatureREQUIRED) = 2
        fromProtoEnum (MandateFeatureOPTIONAL) = 3
 
instance HsJSONPB.ToJSONPB MandateFeature where
        toJSONPB x _ = HsJSONPB.enumFieldString x
        toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
 
instance HsJSONPB.FromJSONPB MandateFeature where
        parseJSONPB (HsJSONPB.String "NO_MANDATE_FEATURE")
          = Hs.pure MandateFeatureNO_MANDATE_FEATURE
        parseJSONPB (HsJSONPB.String "DISABLED")
          = Hs.pure MandateFeatureDISABLED
        parseJSONPB (HsJSONPB.String "REQUIRED")
          = Hs.pure MandateFeatureREQUIRED
        parseJSONPB (HsJSONPB.String "OPTIONAL")
          = Hs.pure MandateFeatureOPTIONAL
        parseJSONPB v = (HsJSONPB.typeMismatch "MandateFeature" v)
 
instance HsJSONPB.ToJSON MandateFeature where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON MandateFeature where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsProtobuf.Finite MandateFeature
 
data OrderEventType = OrderEventTypeNO_ORDER_EVENT_TYPE
                    | OrderEventTypeORDER_EVENT_CREATE
                    | OrderEventTypeORDER_EVENT_UPDATE
                    deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named OrderEventType where
        nameOf _ = (Hs.fromString "OrderEventType")
 
instance HsProtobuf.HasDefault OrderEventType
 
instance Hs.Bounded OrderEventType where
        minBound = OrderEventTypeNO_ORDER_EVENT_TYPE
        maxBound = OrderEventTypeORDER_EVENT_UPDATE
 
instance Hs.Ord OrderEventType where
        compare x y
          = Hs.compare (HsProtobuf.fromProtoEnum x)
              (HsProtobuf.fromProtoEnum y)
 
instance HsProtobuf.ProtoEnum OrderEventType where
        toProtoEnumMay 0 = Hs.Just OrderEventTypeNO_ORDER_EVENT_TYPE
        toProtoEnumMay 1 = Hs.Just OrderEventTypeORDER_EVENT_CREATE
        toProtoEnumMay 2 = Hs.Just OrderEventTypeORDER_EVENT_UPDATE
        toProtoEnumMay _ = Hs.Nothing
        fromProtoEnum (OrderEventTypeNO_ORDER_EVENT_TYPE) = 0
        fromProtoEnum (OrderEventTypeORDER_EVENT_CREATE) = 1
        fromProtoEnum (OrderEventTypeORDER_EVENT_UPDATE) = 2
 
instance HsJSONPB.ToJSONPB OrderEventType where
        toJSONPB x _ = HsJSONPB.enumFieldString x
        toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
 
instance HsJSONPB.FromJSONPB OrderEventType where
        parseJSONPB (HsJSONPB.String "NO_ORDER_EVENT_TYPE")
          = Hs.pure OrderEventTypeNO_ORDER_EVENT_TYPE
        parseJSONPB (HsJSONPB.String "ORDER_EVENT_CREATE")
          = Hs.pure OrderEventTypeORDER_EVENT_CREATE
        parseJSONPB (HsJSONPB.String "ORDER_EVENT_UPDATE")
          = Hs.pure OrderEventTypeORDER_EVENT_UPDATE
        parseJSONPB v = (HsJSONPB.typeMismatch "OrderEventType" v)
 
instance HsJSONPB.ToJSON OrderEventType where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON OrderEventType where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsProtobuf.Finite OrderEventType