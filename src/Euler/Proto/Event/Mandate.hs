{-# LANGUAGE DeriveGeneric     #-}
{-# LANGUAGE DeriveAnyClass    #-}
{-# LANGUAGE DataKinds         #-}
{-# LANGUAGE GADTs             #-}
{-# LANGUAGE TypeApplications  #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Euler.Proto.Event.Mandate where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Control.Applicative as Hs
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty(..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Unsafe.Coerce as Hs
import qualified Euler.Proto.Event.Order
import qualified Euler.Proto.Event.TxnDetail
import qualified Euler.Proto.Event.TxnCardInfo
 
data Mandate = Mandate{mandateId :: Hs.Int64,
                       mandateMerchantId :: Hs.Text,
                       mandateStatus ::
                       HsProtobuf.Enumerated Euler.Proto.Event.Mandate.MandateStatus,
                       mandateToken :: Hs.Text, mandateMandateId :: Hs.Text,
                       mandateDateCreated :: Hs.Int64, mandateLastModified :: Hs.Int64,
                       mandateMaybeEndDate :: Hs.Maybe MandateMaybeEndDate,
                       mandateMaybeStartDate :: Hs.Maybe MandateMaybeStartDate,
                       mandateMaybeMaxAmount :: Hs.Maybe MandateMaybeMaxAmount,
                       mandateMaybeMerchantCustomerId ::
                       Hs.Maybe MandateMaybeMerchantCustomerId,
                       mandateMaybePaymentMethod :: Hs.Maybe MandateMaybePaymentMethod,
                       mandateMaybePaymentMethodType ::
                       Hs.Maybe MandateMaybePaymentMethodType,
                       mandateMaybePaymentMethodId ::
                       Hs.Maybe MandateMaybePaymentMethodId,
                       mandateMaybeGateway :: Hs.Maybe MandateMaybeGateway,
                       mandateMaybeGatewayParams :: Hs.Maybe MandateMaybeGatewayParams,
                       mandateMaybeAuthOrderId :: Hs.Maybe MandateMaybeAuthOrderId,
                       mandateMaybeActivatedAt :: Hs.Maybe MandateMaybeActivatedAt,
                       mandateMaybeAuthTransactionCardInfo ::
                       Hs.Maybe MandateMaybeAuthTransactionCardInfo,
                       mandateMaybeCurrency :: Hs.Maybe MandateMaybeCurrency,
                       mandateMaybeMerchantGatewayAccountId ::
                       Hs.Maybe MandateMaybeMerchantGatewayAccountId,
                       mandateMaybeMetadata :: Hs.Maybe MandateMaybeMetadata,
                       mandateMandateEventType ::
                       HsProtobuf.Enumerated Euler.Proto.Event.Mandate.MandateEventType}
             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named Mandate where
        nameOf _ = (Hs.fromString "Mandate")
 
instance HsProtobuf.HasDefault Mandate
 
instance HsProtobuf.Message Mandate where
        encodeMessage _
          Mandate{mandateId = mandateId,
                  mandateMerchantId = mandateMerchantId,
                  mandateStatus = mandateStatus, mandateToken = mandateToken,
                  mandateMandateId = mandateMandateId,
                  mandateDateCreated = mandateDateCreated,
                  mandateLastModified = mandateLastModified,
                  mandateMaybeEndDate = mandateMaybeEndDate,
                  mandateMaybeStartDate = mandateMaybeStartDate,
                  mandateMaybeMaxAmount = mandateMaybeMaxAmount,
                  mandateMaybeMerchantCustomerId = mandateMaybeMerchantCustomerId,
                  mandateMaybePaymentMethod = mandateMaybePaymentMethod,
                  mandateMaybePaymentMethodType = mandateMaybePaymentMethodType,
                  mandateMaybePaymentMethodId = mandateMaybePaymentMethodId,
                  mandateMaybeGateway = mandateMaybeGateway,
                  mandateMaybeGatewayParams = mandateMaybeGatewayParams,
                  mandateMaybeAuthOrderId = mandateMaybeAuthOrderId,
                  mandateMaybeActivatedAt = mandateMaybeActivatedAt,
                  mandateMaybeAuthTransactionCardInfo =
                    mandateMaybeAuthTransactionCardInfo,
                  mandateMaybeCurrency = mandateMaybeCurrency,
                  mandateMaybeMerchantGatewayAccountId =
                    mandateMaybeMerchantGatewayAccountId,
                  mandateMaybeMetadata = mandateMaybeMetadata,
                  mandateMandateEventType = mandateMandateEventType}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   mandateId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   mandateMerchantId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   mandateStatus),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   mandateToken),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   mandateMandateId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                   mandateDateCreated),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 7)
                   mandateLastModified),
                case mandateMaybeEndDate of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             MandateMaybeEndDateEndDate y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 9)
                                     (HsProtobuf.ForceEmit y)),
                case mandateMaybeStartDate of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             MandateMaybeStartDateStartDate y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 10)
                                     (HsProtobuf.ForceEmit y)),
                case mandateMaybeMaxAmount of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             MandateMaybeMaxAmountMaxAmount y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 11)
                                     (HsProtobuf.ForceEmit y)),
                case mandateMaybeMerchantCustomerId of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             MandateMaybeMerchantCustomerIdMerchantCustomerId y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 12)
                                     (HsProtobuf.ForceEmit y)),
                case mandateMaybePaymentMethod of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             MandateMaybePaymentMethodPaymentMethod y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 13)
                                     (HsProtobuf.ForceEmit y)),
                case mandateMaybePaymentMethodType of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             MandateMaybePaymentMethodTypePaymentMethodType y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 14)
                                     (HsProtobuf.ForceEmit y)),
                case mandateMaybePaymentMethodId of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             MandateMaybePaymentMethodIdPaymentMethodId y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 15)
                                     (HsProtobuf.ForceEmit y)),
                case mandateMaybeGateway of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             MandateMaybeGatewayGateway y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 16)
                                     (HsProtobuf.ForceEmit y)),
                case mandateMaybeGatewayParams of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             MandateMaybeGatewayParamsGatewayParams y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 17)
                                     (HsProtobuf.ForceEmit y)),
                case mandateMaybeAuthOrderId of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             MandateMaybeAuthOrderIdAuthOrderId y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 18)
                                     (HsProtobuf.ForceEmit y)),
                case mandateMaybeActivatedAt of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             MandateMaybeActivatedAtActivatedAt y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 19)
                                     (HsProtobuf.ForceEmit y)),
                case mandateMaybeAuthTransactionCardInfo of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             MandateMaybeAuthTransactionCardInfoAuthTransactionCardInfo y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 20)
                                     (HsProtobuf.ForceEmit y)),
                case mandateMaybeCurrency of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             MandateMaybeCurrencyCurrency y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 21)
                                     (HsProtobuf.ForceEmit y)),
                case mandateMaybeMerchantGatewayAccountId of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             MandateMaybeMerchantGatewayAccountIdMerchantGatewayAccountId y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 22)
                                     (HsProtobuf.ForceEmit y)),
                case mandateMaybeMetadata of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             MandateMaybeMetadataMetadata y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 23)
                                     (HsProtobuf.ForceEmit y)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 8)
                   mandateMandateEventType)])
        decodeMessage _
          = (Hs.pure Mandate) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 3))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 4))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 5))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 6))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 7))
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 9),
                   (Hs.pure (Hs.Just Hs.. MandateMaybeEndDateEndDate)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 10),
                   (Hs.pure (Hs.Just Hs.. MandateMaybeStartDateStartDate)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 11),
                   (Hs.pure (Hs.Just Hs.. MandateMaybeMaxAmountMaxAmount)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 12),
                   (Hs.pure
                      (Hs.Just Hs.. MandateMaybeMerchantCustomerIdMerchantCustomerId))
                     <*> HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 13),
                   (Hs.pure (Hs.Just Hs.. MandateMaybePaymentMethodPaymentMethod)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 14),
                   (Hs.pure
                      (Hs.Just Hs.. MandateMaybePaymentMethodTypePaymentMethodType))
                     <*> HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 15),
                   (Hs.pure (Hs.Just Hs.. MandateMaybePaymentMethodIdPaymentMethodId))
                     <*> HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 16),
                   (Hs.pure (Hs.Just Hs.. MandateMaybeGatewayGateway)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 17),
                   (Hs.pure (Hs.Just Hs.. MandateMaybeGatewayParamsGatewayParams)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 18),
                   (Hs.pure (Hs.Just Hs.. MandateMaybeAuthOrderIdAuthOrderId)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 19),
                   (Hs.pure (Hs.Just Hs.. MandateMaybeActivatedAtActivatedAt)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 20),
                   (Hs.pure
                      (Hs.Just Hs..
                         MandateMaybeAuthTransactionCardInfoAuthTransactionCardInfo))
                     <*> HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 21),
                   (Hs.pure (Hs.Just Hs.. MandateMaybeCurrencyCurrency)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 22),
                   (Hs.pure
                      (Hs.Just Hs..
                         MandateMaybeMerchantGatewayAccountIdMerchantGatewayAccountId))
                     <*> HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 23),
                   (Hs.pure (Hs.Just Hs.. MandateMaybeMetadataMetadata)) <*>
                     HsProtobuf.decodeMessageField)])
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 8))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.Int64)
                (HsProtobuf.Single "id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "merchant_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "MandateStatus")))
                (HsProtobuf.Single "status")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "token")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "mandate_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 6)
                (HsProtobuf.Prim HsProtobuf.Int64)
                (HsProtobuf.Single "date_created")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 7)
                (HsProtobuf.Prim HsProtobuf.Int64)
                (HsProtobuf.Single "last_modified")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 8)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "MandateEventType")))
                (HsProtobuf.Single "mandate_event_type")
                []
                "")]
 
instance HsJSONPB.ToJSONPB Mandate where
        toJSONPB
          (Mandate f1 f2 f3 f4 f5 f6 f7 f9 f10 f11 f12 f13 f14 f15 f16 f17
             f18 f19 f20 f21 f22 f23 f8)
          = (HsJSONPB.object
               ["id" .= f1, "merchant_id" .= f2, "status" .= f3, "token" .= f4,
                "mandate_id" .= f5, "date_created" .= f6, "last_modified" .= f7,
                (let encodeMaybe_end_date
                       = (case f9 of
                              Hs.Just (MandateMaybeEndDateEndDate f9)
                                -> (HsJSONPB.pair "end_date" f9)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_end_date" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_end_date] options))
                         options
                       else encodeMaybe_end_date options),
                (let encodeMaybe_start_date
                       = (case f10 of
                              Hs.Just (MandateMaybeStartDateStartDate f10)
                                -> (HsJSONPB.pair "start_date" f10)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_start_date" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_start_date] options))
                         options
                       else encodeMaybe_start_date options),
                (let encodeMaybe_max_amount
                       = (case f11 of
                              Hs.Just (MandateMaybeMaxAmountMaxAmount f11)
                                -> (HsJSONPB.pair "max_amount" f11)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_max_amount" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_max_amount] options))
                         options
                       else encodeMaybe_max_amount options),
                (let encodeMaybe_merchant_customer_id
                       = (case f12 of
                              Hs.Just (MandateMaybeMerchantCustomerIdMerchantCustomerId f12)
                                -> (HsJSONPB.pair "merchant_customer_id" f12)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_merchant_customer_id" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_merchant_customer_id] options))
                         options
                       else encodeMaybe_merchant_customer_id options),
                (let encodeMaybe_payment_method
                       = (case f13 of
                              Hs.Just (MandateMaybePaymentMethodPaymentMethod f13)
                                -> (HsJSONPB.pair "payment_method" f13)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_payment_method" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_payment_method] options))
                         options
                       else encodeMaybe_payment_method options),
                (let encodeMaybe_payment_method_type
                       = (case f14 of
                              Hs.Just (MandateMaybePaymentMethodTypePaymentMethodType f14)
                                -> (HsJSONPB.pair "payment_method_type" f14)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_payment_method_type" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_payment_method_type] options))
                         options
                       else encodeMaybe_payment_method_type options),
                (let encodeMaybe_payment_method_id
                       = (case f15 of
                              Hs.Just (MandateMaybePaymentMethodIdPaymentMethodId f15)
                                -> (HsJSONPB.pair "payment_method_id" f15)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_payment_method_id" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_payment_method_id] options))
                         options
                       else encodeMaybe_payment_method_id options),
                (let encodeMaybe_gateway
                       = (case f16 of
                              Hs.Just (MandateMaybeGatewayGateway f16)
                                -> (HsJSONPB.pair "gateway" f16)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_gateway" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_gateway] options))
                         options
                       else encodeMaybe_gateway options),
                (let encodeMaybe_gateway_params
                       = (case f17 of
                              Hs.Just (MandateMaybeGatewayParamsGatewayParams f17)
                                -> (HsJSONPB.pair "gateway_params" f17)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_gateway_params" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_gateway_params] options))
                         options
                       else encodeMaybe_gateway_params options),
                (let encodeMaybe_auth_order_id
                       = (case f18 of
                              Hs.Just (MandateMaybeAuthOrderIdAuthOrderId f18)
                                -> (HsJSONPB.pair "auth_order_id" f18)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_auth_order_id" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_auth_order_id] options))
                         options
                       else encodeMaybe_auth_order_id options),
                (let encodeMaybe_activated_at
                       = (case f19 of
                              Hs.Just (MandateMaybeActivatedAtActivatedAt f19)
                                -> (HsJSONPB.pair "activated_at" f19)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_activated_at" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_activated_at] options))
                         options
                       else encodeMaybe_activated_at options),
                (let encodeMaybe_auth_transaction_card_info
                       = (case f20 of
                              Hs.Just
                                (MandateMaybeAuthTransactionCardInfoAuthTransactionCardInfo f20)
                                -> (HsJSONPB.pair "auth_transaction_card_info" f20)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_auth_transaction_card_info" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_auth_transaction_card_info]
                             options))
                         options
                       else encodeMaybe_auth_transaction_card_info options),
                (let encodeMaybe_currency
                       = (case f21 of
                              Hs.Just (MandateMaybeCurrencyCurrency f21)
                                -> (HsJSONPB.pair "currency" f21)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_currency" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_currency] options))
                         options
                       else encodeMaybe_currency options),
                (let encodeMaybe_merchant_gateway_account_id
                       = (case f22 of
                              Hs.Just
                                (MandateMaybeMerchantGatewayAccountIdMerchantGatewayAccountId f22)
                                -> (HsJSONPB.pair "merchant_gateway_account_id" f22)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_merchant_gateway_account_id" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_merchant_gateway_account_id]
                             options))
                         options
                       else encodeMaybe_merchant_gateway_account_id options),
                (let encodeMaybe_metadata
                       = (case f23 of
                              Hs.Just (MandateMaybeMetadataMetadata f23)
                                -> (HsJSONPB.pair "metadata" f23)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_metadata" .=
                          (HsJSONPB.objectOrNull [encodeMaybe_metadata] options))
                         options
                       else encodeMaybe_metadata options),
                "mandate_event_type" .= f8])
        toEncodingPB
          (Mandate f1 f2 f3 f4 f5 f6 f7 f9 f10 f11 f12 f13 f14 f15 f16 f17
             f18 f19 f20 f21 f22 f23 f8)
          = (HsJSONPB.pairs
               ["id" .= f1, "merchant_id" .= f2, "status" .= f3, "token" .= f4,
                "mandate_id" .= f5, "date_created" .= f6, "last_modified" .= f7,
                (let encodeMaybe_end_date
                       = (case f9 of
                              Hs.Just (MandateMaybeEndDateEndDate f9)
                                -> (HsJSONPB.pair "end_date" f9)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_end_date" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_end_date] options))
                         options
                       else encodeMaybe_end_date options),
                (let encodeMaybe_start_date
                       = (case f10 of
                              Hs.Just (MandateMaybeStartDateStartDate f10)
                                -> (HsJSONPB.pair "start_date" f10)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_start_date" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_start_date] options))
                         options
                       else encodeMaybe_start_date options),
                (let encodeMaybe_max_amount
                       = (case f11 of
                              Hs.Just (MandateMaybeMaxAmountMaxAmount f11)
                                -> (HsJSONPB.pair "max_amount" f11)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_max_amount" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_max_amount] options))
                         options
                       else encodeMaybe_max_amount options),
                (let encodeMaybe_merchant_customer_id
                       = (case f12 of
                              Hs.Just (MandateMaybeMerchantCustomerIdMerchantCustomerId f12)
                                -> (HsJSONPB.pair "merchant_customer_id" f12)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_merchant_customer_id" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_merchant_customer_id] options))
                         options
                       else encodeMaybe_merchant_customer_id options),
                (let encodeMaybe_payment_method
                       = (case f13 of
                              Hs.Just (MandateMaybePaymentMethodPaymentMethod f13)
                                -> (HsJSONPB.pair "payment_method" f13)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_payment_method" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_payment_method] options))
                         options
                       else encodeMaybe_payment_method options),
                (let encodeMaybe_payment_method_type
                       = (case f14 of
                              Hs.Just (MandateMaybePaymentMethodTypePaymentMethodType f14)
                                -> (HsJSONPB.pair "payment_method_type" f14)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_payment_method_type" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_payment_method_type] options))
                         options
                       else encodeMaybe_payment_method_type options),
                (let encodeMaybe_payment_method_id
                       = (case f15 of
                              Hs.Just (MandateMaybePaymentMethodIdPaymentMethodId f15)
                                -> (HsJSONPB.pair "payment_method_id" f15)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_payment_method_id" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_payment_method_id] options))
                         options
                       else encodeMaybe_payment_method_id options),
                (let encodeMaybe_gateway
                       = (case f16 of
                              Hs.Just (MandateMaybeGatewayGateway f16)
                                -> (HsJSONPB.pair "gateway" f16)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_gateway" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_gateway] options))
                         options
                       else encodeMaybe_gateway options),
                (let encodeMaybe_gateway_params
                       = (case f17 of
                              Hs.Just (MandateMaybeGatewayParamsGatewayParams f17)
                                -> (HsJSONPB.pair "gateway_params" f17)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_gateway_params" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_gateway_params] options))
                         options
                       else encodeMaybe_gateway_params options),
                (let encodeMaybe_auth_order_id
                       = (case f18 of
                              Hs.Just (MandateMaybeAuthOrderIdAuthOrderId f18)
                                -> (HsJSONPB.pair "auth_order_id" f18)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_auth_order_id" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_auth_order_id] options))
                         options
                       else encodeMaybe_auth_order_id options),
                (let encodeMaybe_activated_at
                       = (case f19 of
                              Hs.Just (MandateMaybeActivatedAtActivatedAt f19)
                                -> (HsJSONPB.pair "activated_at" f19)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_activated_at" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_activated_at] options))
                         options
                       else encodeMaybe_activated_at options),
                (let encodeMaybe_auth_transaction_card_info
                       = (case f20 of
                              Hs.Just
                                (MandateMaybeAuthTransactionCardInfoAuthTransactionCardInfo f20)
                                -> (HsJSONPB.pair "auth_transaction_card_info" f20)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_auth_transaction_card_info" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_auth_transaction_card_info]
                             options))
                         options
                       else encodeMaybe_auth_transaction_card_info options),
                (let encodeMaybe_currency
                       = (case f21 of
                              Hs.Just (MandateMaybeCurrencyCurrency f21)
                                -> (HsJSONPB.pair "currency" f21)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_currency" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_currency] options))
                         options
                       else encodeMaybe_currency options),
                (let encodeMaybe_merchant_gateway_account_id
                       = (case f22 of
                              Hs.Just
                                (MandateMaybeMerchantGatewayAccountIdMerchantGatewayAccountId f22)
                                -> (HsJSONPB.pair "merchant_gateway_account_id" f22)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_merchant_gateway_account_id" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_merchant_gateway_account_id]
                             options))
                         options
                       else encodeMaybe_merchant_gateway_account_id options),
                (let encodeMaybe_metadata
                       = (case f23 of
                              Hs.Just (MandateMaybeMetadataMetadata f23)
                                -> (HsJSONPB.pair "metadata" f23)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("maybe_metadata" .=
                          (HsJSONPB.pairsOrNull [encodeMaybe_metadata] options))
                         options
                       else encodeMaybe_metadata options),
                "mandate_event_type" .= f8])
 
instance HsJSONPB.FromJSONPB Mandate where
        parseJSONPB
          = (HsJSONPB.withObject "Mandate"
               (\ obj ->
                  (Hs.pure Mandate) <*> obj .: "id" <*> obj .: "merchant_id" <*>
                    obj .: "status"
                    <*> obj .: "token"
                    <*> obj .: "mandate_id"
                    <*> obj .: "date_created"
                    <*> obj .: "last_modified"
                    <*>
                    (let parseMaybe_end_date parseObj
                           = Hs.msum
                               [Hs.Just Hs.. MandateMaybeEndDateEndDate <$>
                                  (HsJSONPB.parseField parseObj "end_date"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_end_date") Hs.>>=
                          (HsJSONPB.withObject "maybe_end_date" parseMaybe_end_date))
                         <|> (parseMaybe_end_date obj))
                    <*>
                    (let parseMaybe_start_date parseObj
                           = Hs.msum
                               [Hs.Just Hs.. MandateMaybeStartDateStartDate <$>
                                  (HsJSONPB.parseField parseObj "start_date"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_start_date") Hs.>>=
                          (HsJSONPB.withObject "maybe_start_date" parseMaybe_start_date))
                         <|> (parseMaybe_start_date obj))
                    <*>
                    (let parseMaybe_max_amount parseObj
                           = Hs.msum
                               [Hs.Just Hs.. MandateMaybeMaxAmountMaxAmount <$>
                                  (HsJSONPB.parseField parseObj "max_amount"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_max_amount") Hs.>>=
                          (HsJSONPB.withObject "maybe_max_amount" parseMaybe_max_amount))
                         <|> (parseMaybe_max_amount obj))
                    <*>
                    (let parseMaybe_merchant_customer_id parseObj
                           = Hs.msum
                               [Hs.Just Hs.. MandateMaybeMerchantCustomerIdMerchantCustomerId <$>
                                  (HsJSONPB.parseField parseObj "merchant_customer_id"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_merchant_customer_id") Hs.>>=
                          (HsJSONPB.withObject "maybe_merchant_customer_id"
                             parseMaybe_merchant_customer_id))
                         <|> (parseMaybe_merchant_customer_id obj))
                    <*>
                    (let parseMaybe_payment_method parseObj
                           = Hs.msum
                               [Hs.Just Hs.. MandateMaybePaymentMethodPaymentMethod <$>
                                  (HsJSONPB.parseField parseObj "payment_method"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_payment_method") Hs.>>=
                          (HsJSONPB.withObject "maybe_payment_method"
                             parseMaybe_payment_method))
                         <|> (parseMaybe_payment_method obj))
                    <*>
                    (let parseMaybe_payment_method_type parseObj
                           = Hs.msum
                               [Hs.Just Hs.. MandateMaybePaymentMethodTypePaymentMethodType <$>
                                  (HsJSONPB.parseField parseObj "payment_method_type"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_payment_method_type") Hs.>>=
                          (HsJSONPB.withObject "maybe_payment_method_type"
                             parseMaybe_payment_method_type))
                         <|> (parseMaybe_payment_method_type obj))
                    <*>
                    (let parseMaybe_payment_method_id parseObj
                           = Hs.msum
                               [Hs.Just Hs.. MandateMaybePaymentMethodIdPaymentMethodId <$>
                                  (HsJSONPB.parseField parseObj "payment_method_id"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_payment_method_id") Hs.>>=
                          (HsJSONPB.withObject "maybe_payment_method_id"
                             parseMaybe_payment_method_id))
                         <|> (parseMaybe_payment_method_id obj))
                    <*>
                    (let parseMaybe_gateway parseObj
                           = Hs.msum
                               [Hs.Just Hs.. MandateMaybeGatewayGateway <$>
                                  (HsJSONPB.parseField parseObj "gateway"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_gateway") Hs.>>=
                          (HsJSONPB.withObject "maybe_gateway" parseMaybe_gateway))
                         <|> (parseMaybe_gateway obj))
                    <*>
                    (let parseMaybe_gateway_params parseObj
                           = Hs.msum
                               [Hs.Just Hs.. MandateMaybeGatewayParamsGatewayParams <$>
                                  (HsJSONPB.parseField parseObj "gateway_params"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_gateway_params") Hs.>>=
                          (HsJSONPB.withObject "maybe_gateway_params"
                             parseMaybe_gateway_params))
                         <|> (parseMaybe_gateway_params obj))
                    <*>
                    (let parseMaybe_auth_order_id parseObj
                           = Hs.msum
                               [Hs.Just Hs.. MandateMaybeAuthOrderIdAuthOrderId <$>
                                  (HsJSONPB.parseField parseObj "auth_order_id"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_auth_order_id") Hs.>>=
                          (HsJSONPB.withObject "maybe_auth_order_id"
                             parseMaybe_auth_order_id))
                         <|> (parseMaybe_auth_order_id obj))
                    <*>
                    (let parseMaybe_activated_at parseObj
                           = Hs.msum
                               [Hs.Just Hs.. MandateMaybeActivatedAtActivatedAt <$>
                                  (HsJSONPB.parseField parseObj "activated_at"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_activated_at") Hs.>>=
                          (HsJSONPB.withObject "maybe_activated_at" parseMaybe_activated_at))
                         <|> (parseMaybe_activated_at obj))
                    <*>
                    (let parseMaybe_auth_transaction_card_info parseObj
                           = Hs.msum
                               [Hs.Just Hs..
                                  MandateMaybeAuthTransactionCardInfoAuthTransactionCardInfo
                                  <$> (HsJSONPB.parseField parseObj "auth_transaction_card_info"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_auth_transaction_card_info") Hs.>>=
                          (HsJSONPB.withObject "maybe_auth_transaction_card_info"
                             parseMaybe_auth_transaction_card_info))
                         <|> (parseMaybe_auth_transaction_card_info obj))
                    <*>
                    (let parseMaybe_currency parseObj
                           = Hs.msum
                               [Hs.Just Hs.. MandateMaybeCurrencyCurrency <$>
                                  (HsJSONPB.parseField parseObj "currency"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_currency") Hs.>>=
                          (HsJSONPB.withObject "maybe_currency" parseMaybe_currency))
                         <|> (parseMaybe_currency obj))
                    <*>
                    (let parseMaybe_merchant_gateway_account_id parseObj
                           = Hs.msum
                               [Hs.Just Hs..
                                  MandateMaybeMerchantGatewayAccountIdMerchantGatewayAccountId
                                  <$> (HsJSONPB.parseField parseObj "merchant_gateway_account_id"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_merchant_gateway_account_id") Hs.>>=
                          (HsJSONPB.withObject "maybe_merchant_gateway_account_id"
                             parseMaybe_merchant_gateway_account_id))
                         <|> (parseMaybe_merchant_gateway_account_id obj))
                    <*>
                    (let parseMaybe_metadata parseObj
                           = Hs.msum
                               [Hs.Just Hs.. MandateMaybeMetadataMetadata <$>
                                  (HsJSONPB.parseField parseObj "metadata"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "maybe_metadata") Hs.>>=
                          (HsJSONPB.withObject "maybe_metadata" parseMaybe_metadata))
                         <|> (parseMaybe_metadata obj))
                    <*> obj .: "mandate_event_type"))
 
instance HsJSONPB.ToJSON Mandate where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON Mandate where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema Mandate where
        declareNamedSchema _
          = do let declare_id = HsJSONPB.declareSchemaRef
               mandateId <- declare_id Proxy.Proxy
               let declare_merchant_id = HsJSONPB.declareSchemaRef
               mandateMerchantId <- declare_merchant_id Proxy.Proxy
               let declare_status = HsJSONPB.declareSchemaRef
               mandateStatus <- declare_status Proxy.Proxy
               let declare_token = HsJSONPB.declareSchemaRef
               mandateToken <- declare_token Proxy.Proxy
               let declare_mandate_id = HsJSONPB.declareSchemaRef
               mandateMandateId <- declare_mandate_id Proxy.Proxy
               let declare_date_created = HsJSONPB.declareSchemaRef
               mandateDateCreated <- declare_date_created Proxy.Proxy
               let declare_last_modified = HsJSONPB.declareSchemaRef
               mandateLastModified <- declare_last_modified Proxy.Proxy
               let declare_maybe_end_date = HsJSONPB.declareSchemaRef
               mandateMaybeEndDate <- declare_maybe_end_date Proxy.Proxy
               let declare_maybe_start_date = HsJSONPB.declareSchemaRef
               mandateMaybeStartDate <- declare_maybe_start_date Proxy.Proxy
               let declare_maybe_max_amount = HsJSONPB.declareSchemaRef
               mandateMaybeMaxAmount <- declare_maybe_max_amount Proxy.Proxy
               let declare_maybe_merchant_customer_id = HsJSONPB.declareSchemaRef
               mandateMaybeMerchantCustomerId <- declare_maybe_merchant_customer_id
                                                   Proxy.Proxy
               let declare_maybe_payment_method = HsJSONPB.declareSchemaRef
               mandateMaybePaymentMethod <- declare_maybe_payment_method
                                              Proxy.Proxy
               let declare_maybe_payment_method_type = HsJSONPB.declareSchemaRef
               mandateMaybePaymentMethodType <- declare_maybe_payment_method_type
                                                  Proxy.Proxy
               let declare_maybe_payment_method_id = HsJSONPB.declareSchemaRef
               mandateMaybePaymentMethodId <- declare_maybe_payment_method_id
                                                Proxy.Proxy
               let declare_maybe_gateway = HsJSONPB.declareSchemaRef
               mandateMaybeGateway <- declare_maybe_gateway Proxy.Proxy
               let declare_maybe_gateway_params = HsJSONPB.declareSchemaRef
               mandateMaybeGatewayParams <- declare_maybe_gateway_params
                                              Proxy.Proxy
               let declare_maybe_auth_order_id = HsJSONPB.declareSchemaRef
               mandateMaybeAuthOrderId <- declare_maybe_auth_order_id Proxy.Proxy
               let declare_maybe_activated_at = HsJSONPB.declareSchemaRef
               mandateMaybeActivatedAt <- declare_maybe_activated_at Proxy.Proxy
               let declare_maybe_auth_transaction_card_info
                     = HsJSONPB.declareSchemaRef
               mandateMaybeAuthTransactionCardInfo <- declare_maybe_auth_transaction_card_info
                                                        Proxy.Proxy
               let declare_maybe_currency = HsJSONPB.declareSchemaRef
               mandateMaybeCurrency <- declare_maybe_currency Proxy.Proxy
               let declare_maybe_merchant_gateway_account_id
                     = HsJSONPB.declareSchemaRef
               mandateMaybeMerchantGatewayAccountId <- declare_maybe_merchant_gateway_account_id
                                                         Proxy.Proxy
               let declare_maybe_metadata = HsJSONPB.declareSchemaRef
               mandateMaybeMetadata <- declare_maybe_metadata Proxy.Proxy
               let declare_mandate_event_type = HsJSONPB.declareSchemaRef
               mandateMandateEventType <- declare_mandate_event_type Proxy.Proxy
               let _ = Hs.pure Mandate <*> HsJSONPB.asProxy declare_id <*>
                         HsJSONPB.asProxy declare_merchant_id
                         <*> HsJSONPB.asProxy declare_status
                         <*> HsJSONPB.asProxy declare_token
                         <*> HsJSONPB.asProxy declare_mandate_id
                         <*> HsJSONPB.asProxy declare_date_created
                         <*> HsJSONPB.asProxy declare_last_modified
                         <*> HsJSONPB.asProxy declare_maybe_end_date
                         <*> HsJSONPB.asProxy declare_maybe_start_date
                         <*> HsJSONPB.asProxy declare_maybe_max_amount
                         <*> HsJSONPB.asProxy declare_maybe_merchant_customer_id
                         <*> HsJSONPB.asProxy declare_maybe_payment_method
                         <*> HsJSONPB.asProxy declare_maybe_payment_method_type
                         <*> HsJSONPB.asProxy declare_maybe_payment_method_id
                         <*> HsJSONPB.asProxy declare_maybe_gateway
                         <*> HsJSONPB.asProxy declare_maybe_gateway_params
                         <*> HsJSONPB.asProxy declare_maybe_auth_order_id
                         <*> HsJSONPB.asProxy declare_maybe_activated_at
                         <*> HsJSONPB.asProxy declare_maybe_auth_transaction_card_info
                         <*> HsJSONPB.asProxy declare_maybe_currency
                         <*> HsJSONPB.asProxy declare_maybe_merchant_gateway_account_id
                         <*> HsJSONPB.asProxy declare_maybe_metadata
                         <*> HsJSONPB.asProxy declare_mandate_event_type
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "Mandate",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("id", mandateId),
                                                        ("merchant_id", mandateMerchantId),
                                                        ("status", mandateStatus),
                                                        ("token", mandateToken),
                                                        ("mandate_id", mandateMandateId),
                                                        ("date_created", mandateDateCreated),
                                                        ("last_modified", mandateLastModified),
                                                        ("maybe_end_date", mandateMaybeEndDate),
                                                        ("maybe_start_date", mandateMaybeStartDate),
                                                        ("maybe_max_amount", mandateMaybeMaxAmount),
                                                        ("maybe_merchant_customer_id",
                                                         mandateMaybeMerchantCustomerId),
                                                        ("maybe_payment_method",
                                                         mandateMaybePaymentMethod),
                                                        ("maybe_payment_method_type",
                                                         mandateMaybePaymentMethodType),
                                                        ("maybe_payment_method_id",
                                                         mandateMaybePaymentMethodId),
                                                        ("maybe_gateway", mandateMaybeGateway),
                                                        ("maybe_gateway_params",
                                                         mandateMaybeGatewayParams),
                                                        ("maybe_auth_order_id",
                                                         mandateMaybeAuthOrderId),
                                                        ("maybe_activated_at",
                                                         mandateMaybeActivatedAt),
                                                        ("maybe_auth_transaction_card_info",
                                                         mandateMaybeAuthTransactionCardInfo),
                                                        ("maybe_currency", mandateMaybeCurrency),
                                                        ("maybe_merchant_gateway_account_id",
                                                         mandateMaybeMerchantGatewayAccountId),
                                                        ("maybe_metadata", mandateMaybeMetadata),
                                                        ("mandate_event_type",
                                                         mandateMandateEventType)]}})
 
data MandateMaybeEndDate = MandateMaybeEndDateEndDate Hs.Int64
                         deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateMaybeEndDate where
        nameOf _ = (Hs.fromString "MandateMaybeEndDate")
 
instance HsJSONPB.ToSchema MandateMaybeEndDate where
        declareNamedSchema _
          = do let declare_end_date = HsJSONPB.declareSchemaRef
               mandateMaybeEndDateEndDate <- declare_end_date Proxy.Proxy
               let _ = Hs.pure MandateMaybeEndDateEndDate <*>
                         HsJSONPB.asProxy declare_end_date
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "MandateMaybeEndDate",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("end_date", mandateMaybeEndDateEndDate)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data MandateMaybeStartDate = MandateMaybeStartDateStartDate Hs.Int64
                           deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateMaybeStartDate where
        nameOf _ = (Hs.fromString "MandateMaybeStartDate")
 
instance HsJSONPB.ToSchema MandateMaybeStartDate where
        declareNamedSchema _
          = do let declare_start_date = HsJSONPB.declareSchemaRef
               mandateMaybeStartDateStartDate <- declare_start_date Proxy.Proxy
               let _ = Hs.pure MandateMaybeStartDateStartDate <*>
                         HsJSONPB.asProxy declare_start_date
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "MandateMaybeStartDate",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("start_date",
                                                         mandateMaybeStartDateStartDate)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data MandateMaybeMaxAmount = MandateMaybeMaxAmountMaxAmount Hs.Double
                           deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateMaybeMaxAmount where
        nameOf _ = (Hs.fromString "MandateMaybeMaxAmount")
 
instance HsJSONPB.ToSchema MandateMaybeMaxAmount where
        declareNamedSchema _
          = do let declare_max_amount = HsJSONPB.declareSchemaRef
               mandateMaybeMaxAmountMaxAmount <- declare_max_amount Proxy.Proxy
               let _ = Hs.pure MandateMaybeMaxAmountMaxAmount <*>
                         HsJSONPB.asProxy declare_max_amount
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "MandateMaybeMaxAmount",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("max_amount",
                                                         mandateMaybeMaxAmountMaxAmount)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data MandateMaybeMerchantCustomerId = MandateMaybeMerchantCustomerIdMerchantCustomerId Hs.Text
                                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateMaybeMerchantCustomerId where
        nameOf _ = (Hs.fromString "MandateMaybeMerchantCustomerId")
 
instance HsJSONPB.ToSchema MandateMaybeMerchantCustomerId where
        declareNamedSchema _
          = do let declare_merchant_customer_id = HsJSONPB.declareSchemaRef
               mandateMaybeMerchantCustomerIdMerchantCustomerId <- declare_merchant_customer_id
                                                                     Proxy.Proxy
               let _ = Hs.pure MandateMaybeMerchantCustomerIdMerchantCustomerId
                         <*> HsJSONPB.asProxy declare_merchant_customer_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "MandateMaybeMerchantCustomerId",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("merchant_customer_id",
                                                         mandateMaybeMerchantCustomerIdMerchantCustomerId)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data MandateMaybePaymentMethod = MandateMaybePaymentMethodPaymentMethod Hs.Text
                               deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateMaybePaymentMethod where
        nameOf _ = (Hs.fromString "MandateMaybePaymentMethod")
 
instance HsJSONPB.ToSchema MandateMaybePaymentMethod where
        declareNamedSchema _
          = do let declare_payment_method = HsJSONPB.declareSchemaRef
               mandateMaybePaymentMethodPaymentMethod <- declare_payment_method
                                                           Proxy.Proxy
               let _ = Hs.pure MandateMaybePaymentMethodPaymentMethod <*>
                         HsJSONPB.asProxy declare_payment_method
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "MandateMaybePaymentMethod",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("payment_method",
                                                         mandateMaybePaymentMethodPaymentMethod)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data MandateMaybePaymentMethodType = MandateMaybePaymentMethodTypePaymentMethodType (HsProtobuf.Enumerated
                                                                                       Euler.Proto.Event.TxnCardInfo.PaymentMethodType)
                                   deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateMaybePaymentMethodType where
        nameOf _ = (Hs.fromString "MandateMaybePaymentMethodType")
 
instance HsJSONPB.ToSchema MandateMaybePaymentMethodType where
        declareNamedSchema _
          = do let declare_payment_method_type = HsJSONPB.declareSchemaRef
               mandateMaybePaymentMethodTypePaymentMethodType <- declare_payment_method_type
                                                                   Proxy.Proxy
               let _ = Hs.pure MandateMaybePaymentMethodTypePaymentMethodType <*>
                         HsJSONPB.asProxy declare_payment_method_type
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "MandateMaybePaymentMethodType",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("payment_method_type",
                                                         mandateMaybePaymentMethodTypePaymentMethodType)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data MandateMaybePaymentMethodId = MandateMaybePaymentMethodIdPaymentMethodId Hs.Text
                                 deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateMaybePaymentMethodId where
        nameOf _ = (Hs.fromString "MandateMaybePaymentMethodId")
 
instance HsJSONPB.ToSchema MandateMaybePaymentMethodId where
        declareNamedSchema _
          = do let declare_payment_method_id = HsJSONPB.declareSchemaRef
               mandateMaybePaymentMethodIdPaymentMethodId <- declare_payment_method_id
                                                               Proxy.Proxy
               let _ = Hs.pure MandateMaybePaymentMethodIdPaymentMethodId <*>
                         HsJSONPB.asProxy declare_payment_method_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "MandateMaybePaymentMethodId",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("payment_method_id",
                                                         mandateMaybePaymentMethodIdPaymentMethodId)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data MandateMaybeGateway = MandateMaybeGatewayGateway (HsProtobuf.Enumerated
                                                         Euler.Proto.Event.TxnDetail.Gateway)
                         deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateMaybeGateway where
        nameOf _ = (Hs.fromString "MandateMaybeGateway")
 
instance HsJSONPB.ToSchema MandateMaybeGateway where
        declareNamedSchema _
          = do let declare_gateway = HsJSONPB.declareSchemaRef
               mandateMaybeGatewayGateway <- declare_gateway Proxy.Proxy
               let _ = Hs.pure MandateMaybeGatewayGateway <*>
                         HsJSONPB.asProxy declare_gateway
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "MandateMaybeGateway",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("gateway", mandateMaybeGatewayGateway)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data MandateMaybeGatewayParams = MandateMaybeGatewayParamsGatewayParams Hs.Text
                               deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateMaybeGatewayParams where
        nameOf _ = (Hs.fromString "MandateMaybeGatewayParams")
 
instance HsJSONPB.ToSchema MandateMaybeGatewayParams where
        declareNamedSchema _
          = do let declare_gateway_params = HsJSONPB.declareSchemaRef
               mandateMaybeGatewayParamsGatewayParams <- declare_gateway_params
                                                           Proxy.Proxy
               let _ = Hs.pure MandateMaybeGatewayParamsGatewayParams <*>
                         HsJSONPB.asProxy declare_gateway_params
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "MandateMaybeGatewayParams",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("gateway_params",
                                                         mandateMaybeGatewayParamsGatewayParams)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data MandateMaybeAuthOrderId = MandateMaybeAuthOrderIdAuthOrderId Hs.Int64
                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateMaybeAuthOrderId where
        nameOf _ = (Hs.fromString "MandateMaybeAuthOrderId")
 
instance HsJSONPB.ToSchema MandateMaybeAuthOrderId where
        declareNamedSchema _
          = do let declare_auth_order_id = HsJSONPB.declareSchemaRef
               mandateMaybeAuthOrderIdAuthOrderId <- declare_auth_order_id
                                                       Proxy.Proxy
               let _ = Hs.pure MandateMaybeAuthOrderIdAuthOrderId <*>
                         HsJSONPB.asProxy declare_auth_order_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "MandateMaybeAuthOrderId",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("auth_order_id",
                                                         mandateMaybeAuthOrderIdAuthOrderId)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data MandateMaybeActivatedAt = MandateMaybeActivatedAtActivatedAt Hs.Int64
                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateMaybeActivatedAt where
        nameOf _ = (Hs.fromString "MandateMaybeActivatedAt")
 
instance HsJSONPB.ToSchema MandateMaybeActivatedAt where
        declareNamedSchema _
          = do let declare_activated_at = HsJSONPB.declareSchemaRef
               mandateMaybeActivatedAtActivatedAt <- declare_activated_at
                                                       Proxy.Proxy
               let _ = Hs.pure MandateMaybeActivatedAtActivatedAt <*>
                         HsJSONPB.asProxy declare_activated_at
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "MandateMaybeActivatedAt",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("activated_at",
                                                         mandateMaybeActivatedAtActivatedAt)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data MandateMaybeAuthTransactionCardInfo = MandateMaybeAuthTransactionCardInfoAuthTransactionCardInfo Hs.Text
                                         deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateMaybeAuthTransactionCardInfo where
        nameOf _ = (Hs.fromString "MandateMaybeAuthTransactionCardInfo")
 
instance HsJSONPB.ToSchema MandateMaybeAuthTransactionCardInfo
         where
        declareNamedSchema _
          = do let declare_auth_transaction_card_info
                     = HsJSONPB.declareSchemaRef
               mandateMaybeAuthTransactionCardInfoAuthTransactionCardInfo <- declare_auth_transaction_card_info
                                                                               Proxy.Proxy
               let _ = Hs.pure
                         MandateMaybeAuthTransactionCardInfoAuthTransactionCardInfo
                         <*> HsJSONPB.asProxy declare_auth_transaction_card_info
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "MandateMaybeAuthTransactionCardInfo",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("auth_transaction_card_info",
                                                         mandateMaybeAuthTransactionCardInfoAuthTransactionCardInfo)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data MandateMaybeCurrency = MandateMaybeCurrencyCurrency (HsProtobuf.Enumerated
                                                            Euler.Proto.Event.Order.Currency)
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateMaybeCurrency where
        nameOf _ = (Hs.fromString "MandateMaybeCurrency")
 
instance HsJSONPB.ToSchema MandateMaybeCurrency where
        declareNamedSchema _
          = do let declare_currency = HsJSONPB.declareSchemaRef
               mandateMaybeCurrencyCurrency <- declare_currency Proxy.Proxy
               let _ = Hs.pure MandateMaybeCurrencyCurrency <*>
                         HsJSONPB.asProxy declare_currency
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "MandateMaybeCurrency",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("currency", mandateMaybeCurrencyCurrency)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data MandateMaybeMerchantGatewayAccountId = MandateMaybeMerchantGatewayAccountIdMerchantGatewayAccountId Hs.Int64
                                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateMaybeMerchantGatewayAccountId
         where
        nameOf _ = (Hs.fromString "MandateMaybeMerchantGatewayAccountId")
 
instance HsJSONPB.ToSchema MandateMaybeMerchantGatewayAccountId
         where
        declareNamedSchema _
          = do let declare_merchant_gateway_account_id
                     = HsJSONPB.declareSchemaRef
               mandateMaybeMerchantGatewayAccountIdMerchantGatewayAccountId <- declare_merchant_gateway_account_id
                                                                                 Proxy.Proxy
               let _ = Hs.pure
                         MandateMaybeMerchantGatewayAccountIdMerchantGatewayAccountId
                         <*> HsJSONPB.asProxy declare_merchant_gateway_account_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "MandateMaybeMerchantGatewayAccountId",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("merchant_gateway_account_id",
                                                         mandateMaybeMerchantGatewayAccountIdMerchantGatewayAccountId)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data MandateMaybeMetadata = MandateMaybeMetadataMetadata Hs.Text
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateMaybeMetadata where
        nameOf _ = (Hs.fromString "MandateMaybeMetadata")
 
instance HsJSONPB.ToSchema MandateMaybeMetadata where
        declareNamedSchema _
          = do let declare_metadata = HsJSONPB.declareSchemaRef
               mandateMaybeMetadataMetadata <- declare_metadata Proxy.Proxy
               let _ = Hs.pure MandateMaybeMetadataMetadata <*>
                         HsJSONPB.asProxy declare_metadata
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "MandateMaybeMetadata",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("metadata", mandateMaybeMetadataMetadata)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data MandateStatus = MandateStatusNO_MANDATE_STATUS
                   | MandateStatusCREATED
                   | MandateStatusACTIVE
                   | MandateStatusPAUSED
                   | MandateStatusREVOKING
                   | MandateStatusFAILURE
                   | MandateStatusPENDING
                   deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateStatus where
        nameOf _ = (Hs.fromString "MandateStatus")
 
instance HsProtobuf.HasDefault MandateStatus
 
instance Hs.Bounded MandateStatus where
        minBound = MandateStatusNO_MANDATE_STATUS
        maxBound = MandateStatusPENDING
 
instance Hs.Ord MandateStatus where
        compare x y
          = Hs.compare (HsProtobuf.fromProtoEnum x)
              (HsProtobuf.fromProtoEnum y)
 
instance HsProtobuf.ProtoEnum MandateStatus where
        toProtoEnumMay 0 = Hs.Just MandateStatusNO_MANDATE_STATUS
        toProtoEnumMay 1 = Hs.Just MandateStatusCREATED
        toProtoEnumMay 2 = Hs.Just MandateStatusACTIVE
        toProtoEnumMay 3 = Hs.Just MandateStatusPAUSED
        toProtoEnumMay 4 = Hs.Just MandateStatusREVOKING
        toProtoEnumMay 5 = Hs.Just MandateStatusFAILURE
        toProtoEnumMay 6 = Hs.Just MandateStatusPENDING
        toProtoEnumMay _ = Hs.Nothing
        fromProtoEnum (MandateStatusNO_MANDATE_STATUS) = 0
        fromProtoEnum (MandateStatusCREATED) = 1
        fromProtoEnum (MandateStatusACTIVE) = 2
        fromProtoEnum (MandateStatusPAUSED) = 3
        fromProtoEnum (MandateStatusREVOKING) = 4
        fromProtoEnum (MandateStatusFAILURE) = 5
        fromProtoEnum (MandateStatusPENDING) = 6
 
instance HsJSONPB.ToJSONPB MandateStatus where
        toJSONPB x _ = HsJSONPB.enumFieldString x
        toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
 
instance HsJSONPB.FromJSONPB MandateStatus where
        parseJSONPB (HsJSONPB.String "NO_MANDATE_STATUS")
          = Hs.pure MandateStatusNO_MANDATE_STATUS
        parseJSONPB (HsJSONPB.String "CREATED")
          = Hs.pure MandateStatusCREATED
        parseJSONPB (HsJSONPB.String "ACTIVE")
          = Hs.pure MandateStatusACTIVE
        parseJSONPB (HsJSONPB.String "PAUSED")
          = Hs.pure MandateStatusPAUSED
        parseJSONPB (HsJSONPB.String "REVOKING")
          = Hs.pure MandateStatusREVOKING
        parseJSONPB (HsJSONPB.String "FAILURE")
          = Hs.pure MandateStatusFAILURE
        parseJSONPB (HsJSONPB.String "PENDING")
          = Hs.pure MandateStatusPENDING
        parseJSONPB v = (HsJSONPB.typeMismatch "MandateStatus" v)
 
instance HsJSONPB.ToJSON MandateStatus where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON MandateStatus where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsProtobuf.Finite MandateStatus
 
data MandateEventType = MandateEventTypeNO_MANDATE_EVENT_TYPE
                      | MandateEventTypeMANDATE_EVENT_CREATE
                      | MandateEventTypeMANDATE_EVENT_UPDATE
                      deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named MandateEventType where
        nameOf _ = (Hs.fromString "MandateEventType")
 
instance HsProtobuf.HasDefault MandateEventType
 
instance Hs.Bounded MandateEventType where
        minBound = MandateEventTypeNO_MANDATE_EVENT_TYPE
        maxBound = MandateEventTypeMANDATE_EVENT_UPDATE
 
instance Hs.Ord MandateEventType where
        compare x y
          = Hs.compare (HsProtobuf.fromProtoEnum x)
              (HsProtobuf.fromProtoEnum y)
 
instance HsProtobuf.ProtoEnum MandateEventType where
        toProtoEnumMay 0 = Hs.Just MandateEventTypeNO_MANDATE_EVENT_TYPE
        toProtoEnumMay 1 = Hs.Just MandateEventTypeMANDATE_EVENT_CREATE
        toProtoEnumMay 2 = Hs.Just MandateEventTypeMANDATE_EVENT_UPDATE
        toProtoEnumMay _ = Hs.Nothing
        fromProtoEnum (MandateEventTypeNO_MANDATE_EVENT_TYPE) = 0
        fromProtoEnum (MandateEventTypeMANDATE_EVENT_CREATE) = 1
        fromProtoEnum (MandateEventTypeMANDATE_EVENT_UPDATE) = 2
 
instance HsJSONPB.ToJSONPB MandateEventType where
        toJSONPB x _ = HsJSONPB.enumFieldString x
        toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
 
instance HsJSONPB.FromJSONPB MandateEventType where
        parseJSONPB (HsJSONPB.String "NO_MANDATE_EVENT_TYPE")
          = Hs.pure MandateEventTypeNO_MANDATE_EVENT_TYPE
        parseJSONPB (HsJSONPB.String "MANDATE_EVENT_CREATE")
          = Hs.pure MandateEventTypeMANDATE_EVENT_CREATE
        parseJSONPB (HsJSONPB.String "MANDATE_EVENT_UPDATE")
          = Hs.pure MandateEventTypeMANDATE_EVENT_UPDATE
        parseJSONPB v = (HsJSONPB.typeMismatch "MandateEventType" v)
 
instance HsJSONPB.ToJSON MandateEventType where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON MandateEventType where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsProtobuf.Finite MandateEventType